{"abi":[{"type":"function","name":"addReward","inputs":[{"name":"_rewardsToken","type":"address","internalType":"address"},{"name":"_rewardsDuration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"earned","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"_rewardsToken","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"exit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAllRewardTokens","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getAllRewardsForUser","inputs":[{"name":"_user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct IInfraredVault.UserReward[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getReward","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getRewardForDuration","inputs":[{"name":"_rewardsToken","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRewardForUser","inputs":[{"name":"_user","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"infrared","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"lastTimeRewardApplicable","inputs":[{"name":"_rewardsToken","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"notifyRewardAmount","inputs":[{"name":"_rewardToken","type":"address","internalType":"address"},{"name":"_reward","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recoverERC20","inputs":[{"name":"_to","type":"address","internalType":"address"},{"name":"_token","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rewardData","inputs":[{"name":"_rewardsToken","type":"address","internalType":"address"}],"outputs":[{"name":"rewardsDistributor","type":"address","internalType":"address"},{"name":"rewardsDuration","type":"uint256","internalType":"uint256"},{"name":"periodFinish","type":"uint256","internalType":"uint256"},{"name":"rewardRate","type":"uint256","internalType":"uint256"},{"name":"lastUpdateTime","type":"uint256","internalType":"uint256"},{"name":"rewardPerTokenStored","type":"uint256","internalType":"uint256"},{"name":"rewardResidual","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"rewardPerToken","inputs":[{"name":"_rewardsToken","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"rewardTokens","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"rewardsVault","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IRewardVault"}],"stateMutability":"view"},{"type":"function","name":"stake","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"togglePause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"updateRewardsDuration","inputs":[{"name":"_rewardsToken","type":"address","internalType":"address"},{"name":"_rewardsDuration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdraw","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Recovered","inputs":[{"name":"token","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardAdded","inputs":[{"name":"rewardsToken","type":"address","indexed":true,"internalType":"address"},{"name":"reward","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardPaid","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"rewardsToken","type":"address","indexed":true,"internalType":"address"},{"name":"reward","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardStored","inputs":[{"name":"rewardsToken","type":"address","indexed":false,"internalType":"address"},{"name":"rewardsDuration","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardsDistributorUpdated","inputs":[{"name":"rewardsToken","type":"address","indexed":true,"internalType":"address"},{"name":"newDistributor","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RewardsDurationUpdated","inputs":[{"name":"token","type":"address","indexed":false,"internalType":"address"},{"name":"newDuration","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Staked","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Withdrawn","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addReward(address,uint256)":"9feb8f50","balanceOf(address)":"70a08231","earned(address,address)":"211dc32d","exit()":"e9fad8ee","getAllRewardTokens()":"12edb24c","getAllRewardsForUser(address)":"2a170546","getReward()":"3d18b912","getRewardForDuration(address)":"bcd11014","getRewardForUser(address)":"ef790a82","infrared()":"21f96c65","lastTimeRewardApplicable(address)":"638634ee","notifyRewardAmount(address,uint256)":"b66503cf","recoverERC20(address,address,uint256)":"1171bda9","rewardData(address)":"48e5d9f8","rewardPerToken(address)":"f1229777","rewardTokens(uint256)":"7bb7bed1","rewardsVault()":"5579ed01","stake(uint256)":"a694fc3a","togglePause()":"c4ae3168","totalSupply()":"18160ddd","updateRewardsDuration(address,uint256)":"c004ac61","withdraw(uint256)":"2e1a7d4d"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardsToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardsToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardsToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardsDuration\",\"type\":\"uint256\"}],\"name\":\"RewardStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardsToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDistributor\",\"type\":\"address\"}],\"name\":\"RewardsDistributorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDuration\",\"type\":\"uint256\"}],\"name\":\"RewardsDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsDuration\",\"type\":\"uint256\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRewardTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAllRewardsForUser\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IInfraredVault.UserReward[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRewardForUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"infrared\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"name\":\"rewardData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rewardsDistributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardsDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodFinish\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerTokenStored\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardResidual\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"rewardTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsVault\",\"outputs\":[{\"internalType\":\"contract IRewardVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsDuration\",\"type\":\"uint256\"}],\"name\":\"updateRewardsDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Recovered(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens that were recovered\",\"token\":\"The address of the token that was recovered\"}},\"RewardAdded(address,uint256)\":{\"params\":{\"reward\":\"The amount of rewards added\",\"rewardsToken\":\"The address of the reward token\"}},\"RewardPaid(address,address,uint256)\":{\"params\":{\"reward\":\"The amount of rewards claimed\",\"rewardsToken\":\"The address of the reward token\",\"user\":\"The address of the user claiming the reward\"}},\"RewardStored(address,uint256)\":{\"params\":{\"rewardsDuration\":\"The duration set for the reward period\",\"rewardsToken\":\"The address of the reward token\"}},\"RewardsDistributorUpdated(address,address)\":{\"params\":{\"newDistributor\":\"The address of the new distributor\",\"rewardsToken\":\"The address of the reward token\"}},\"RewardsDurationUpdated(address,uint256)\":{\"params\":{\"newDuration\":\"The new duration set for the rewards period\",\"token\":\"The reward token address whose duration was updated\"}},\"Staked(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens staked\",\"user\":\"The address of the user who staked\"}},\"Withdrawn(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens withdrawn\",\"user\":\"The address of the user who withdrew\"}}},\"kind\":\"dev\",\"methods\":{\"addReward(address,uint256)\":{\"custom:access-control\":\"Requires INFRARED_ROLE\",\"details\":\"Cannot exceed maximum number of reward tokens\",\"params\":{\"_rewardsDuration\":\"The reward period duration\",\"_rewardsToken\":\"The reward token to add\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account to get the balance for\"},\"returns\":{\"_0\":\"The balance of staked tokens\"}},\"earned(address,address)\":{\"params\":{\"_rewardsToken\":\"The address of the rewards token\",\"account\":\"The address of the account\"},\"returns\":{\"_0\":\"The amount of rewards earned\"}},\"exit()\":{\"details\":\"Combines withdraw and getReward operations\"},\"getAllRewardTokens()\":{\"returns\":{\"_0\":\"An array of reward token addresses\"}},\"getAllRewardsForUser(address)\":{\"params\":{\"_user\":\"The address of the user\"},\"returns\":{\"_0\":\"An array of UserReward structs\"}},\"getReward()\":{\"details\":\"Transfers all accrued rewards to the caller\"},\"getRewardForDuration(address)\":{\"params\":{\"_rewardsToken\":\"The address of the rewards token\"},\"returns\":{\"_0\":\"The total reward amount for the duration of a given rewards token\"}},\"getRewardForUser(address)\":{\"details\":\"Iterates through all reward tokens and transfers any accrued rewards to the user\",\"params\":{\"_user\":\"The address of the user to claim rewards for\"}},\"infrared()\":{\"returns\":{\"_0\":\"The address of the Infrared contract\"}},\"lastTimeRewardApplicable(address)\":{\"params\":{\"_rewardsToken\":\"The address of the rewards token\"},\"returns\":{\"_0\":\"The timestamp when the reward was last applicable\"}},\"notifyRewardAmount(address,uint256)\":{\"details\":\"Updates internal reward rate calculations\",\"params\":{\"_reward\":\"The amount of new rewards\",\"_rewardToken\":\"The reward token address\"}},\"recoverERC20(address,address,uint256)\":{\"details\":\"Cannot recover staking token or active reward tokens\",\"params\":{\"_amount\":\"The amount to recover\",\"_to\":\"The address to receive the recovered tokens\",\"_token\":\"The token to recover\"}},\"rewardData(address)\":{\"params\":{\"_rewardsToken\":\"The address of the rewards token\"},\"returns\":{\"lastUpdateTime\":\"The last time rewards were updated\",\"periodFinish\":\"The timestamp when rewards finish\",\"rewardPerTokenStored\":\"The last calculated reward per token\",\"rewardRate\":\"The rate of rewards distributed per second\",\"rewardsDistributor\":\"The address authorized to distribute rewards\",\"rewardsDuration\":\"The duration of the reward period\"}},\"rewardPerToken(address)\":{\"params\":{\"_rewardsToken\":\"The address of the rewards token\"},\"returns\":{\"_0\":\"The reward amount per token\"}},\"rewardTokens(uint256)\":{\"params\":{\"index\":\"The index in the reward tokens array\"},\"returns\":{\"_0\":\"The address of the reward token at the given index\"}},\"rewardsVault()\":{\"returns\":{\"_0\":\"The rewards vault contract instance\"}},\"stake(uint256)\":{\"details\":\"Transfers `amount` of staking tokens from the user to this contract\",\"params\":{\"amount\":\"The amount of tokens to stake\"}},\"togglePause()\":{\"custom:access-control\":\"Requires INFRARED_ROLE\",\"details\":\"Affects all vault operations when paused\"},\"totalSupply()\":{\"returns\":{\"_0\":\"uint256 The total supply of staked tokens\"}},\"updateRewardsDuration(address,uint256)\":{\"custom:access-control\":\"Requires INFRARED_ROLE\",\"details\":\"Only callable by Infrared contract\",\"params\":{\"_rewardsDuration\":\"The new duration in seconds\",\"_rewardsToken\":\"The address of the reward token\"}},\"withdraw(uint256)\":{\"details\":\"Transfers `amount` of staking tokens back to the user\",\"params\":{\"amount\":\"The amount of tokens to withdraw\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Recovered(address,uint256)\":{\"notice\":\"Emitted when tokens are recovered from the contract\"},\"RewardAdded(address,uint256)\":{\"notice\":\"Emitted when rewards are added to the contract\"},\"RewardPaid(address,address,uint256)\":{\"notice\":\"Emitted when rewards are claimed\"},\"RewardStored(address,uint256)\":{\"notice\":\"Emitted when new reward data is stored\"},\"RewardsDistributorUpdated(address,address)\":{\"notice\":\"Emitted when a rewards distributor is updaRewardAddedd\"},\"RewardsDurationUpdated(address,uint256)\":{\"notice\":\"Emitted when the rewards duration for a token is updated\"},\"Staked(address,uint256)\":{\"notice\":\"Emitted when tokens are staked\"},\"Withdrawn(address,uint256)\":{\"notice\":\"Emitted when tokens are withdrawn\"}},\"kind\":\"user\",\"methods\":{\"addReward(address,uint256)\":{\"notice\":\"Adds a new reward token to the vault\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of staked tokens for the given account\"},\"earned(address,address)\":{\"notice\":\"Calculates the earned rewards for a given account and rewards token\"},\"exit()\":{\"notice\":\"Withdraws all staked tokens and claims pending rewards\"},\"getAllRewardTokens()\":{\"notice\":\"Returns all reward tokens\"},\"getAllRewardsForUser(address)\":{\"notice\":\"Returns all rewards for a userOnly up to date since the `lastUpdateTime`\"},\"getReward()\":{\"notice\":\"Claims all pending rewards for the caller\"},\"getRewardForDuration(address)\":{\"notice\":\"Calculates the total reward for the duration of a given rewards token\"},\"getRewardForUser(address)\":{\"notice\":\"Claims all pending rewards for a specified user\"},\"infrared()\":{\"notice\":\"Returns the Infrared protocol coordinator\"},\"lastTimeRewardApplicable(address)\":{\"notice\":\"Calculates the last time reward is applicable for a given rewards token\"},\"notifyRewardAmount(address,uint256)\":{\"notice\":\"Notifies the vault of newly added rewards\"},\"recoverERC20(address,address,uint256)\":{\"notice\":\"Recovers accidentally sent tokens\"},\"rewardData(address)\":{\"notice\":\"Gets the reward data for a given rewards token\"},\"rewardPerToken(address)\":{\"notice\":\"Calculates the reward per token for a given rewards token\"},\"rewardTokens(uint256)\":{\"notice\":\"Returns the reward token address at a specific index\"},\"rewardsVault()\":{\"notice\":\"Returns the associated Berachain rewards vault\"},\"stake(uint256)\":{\"notice\":\"Stakes tokens into the contract\"},\"togglePause()\":{\"notice\":\"Toggles pause state of the vault\"},\"totalSupply()\":{\"notice\":\"Returns the total amount of staked tokens in the contract\"},\"updateRewardsDuration(address,uint256)\":{\"notice\":\"Updates reward duration for a specific reward token\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws staked tokens from the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IInfraredVault.sol\":\"IInfraredVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[\":@berachain/=lib/contracts-monorepo/src/\",\":@forge-std/=lib/forge-std/src/\",\":@mock/=lib/contracts-monorepo/test/mock/\",\":@openzeppelin-gov-ext/=lib/contracts-monorepo/node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/\",\":@openzeppelin-gov/=lib/contracts-monorepo/node_modules/@openzeppelin/contracts-upgradeable/governance/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/=lib/prb-test/src/\",\":@prb/math/=lib/contracts-monorepo/node_modules/@prb/math/\",\":@pythnetwork/=lib/contracts-monorepo/node_modules/@pythnetwork/pyth-sdk-solidity/\",\":@solmate/=lib/solmate/src/\",\":contracts-monorepo/=lib/contracts-monorepo/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-test/src/\",\":solady/src/=lib/solady/src/\",\":solady/test/=lib/solady/test/\",\":solmate/=lib/solmate/src/\",\":transient-goodies/=lib/contracts-monorepo/lib/transient-goodies/src/\"]},\"sources\":{\"lib/contracts-monorepo/src/base/IStakingRewards.sol\":{\"keccak256\":\"0xbc9c5e63529aa547da9056deea1eb3d3275be79cb03ec141eb1488045b9f06dc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8d0196a4ecda33cdeab2145e7f7ab832dae8c2e882b300edb2b75ce5c99d02d6\",\"dweb:/ipfs/Qmeuu7U3qWV6WqjACrjso5hgYaVtKyDwc867rgZm56Agbo\"]},\"lib/contracts-monorepo/src/base/IStakingRewardsErrors.sol\":{\"keccak256\":\"0xb6f2b90f37ef86721c2fffcc7ab9ef3cbe7857a9cae03aeab4a902e3d192b5a3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://71f9c77e85e6d5c8447663edd4078cecde127679c49befd0b4f8d8b675f3ea0b\",\"dweb:/ipfs/QmY9g48MGDfFYLtdA8NgEC8dHvnLZGb33wbuQL8pXXqZxp\"]},\"lib/contracts-monorepo/src/pol/interfaces/IPOLErrors.sol\":{\"keccak256\":\"0x0c1f5649b97aab159d3a9bf63295ce36803b2f3b4febe2fbe12edcbc524e2e43\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24756391ec06a77aa0645b929c80e0e9f98d185ab0fabdc4964ad7117371a08a\",\"dweb:/ipfs/QmVwvweGzmrQKYuVHZwC13mrfZwaEQFr6nCh5J5J2fM3bv\"]},\"lib/contracts-monorepo/src/pol/interfaces/IRewardVault.sol\":{\"keccak256\":\"0x715034f3ce499510dd02d31ae8a9363d9e29cad564bd60a7c227498af9c5ee69\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://99ace33a1d80ad6ed6253190a630f9dd6e194e0e811e54f024ac3b760ce6a658\",\"dweb:/ipfs/QmQxRtJzPrazFdBCeruxqbfiQhi3QhAmm3kTEnoHZA4pv1\"]},\"src/interfaces/IInfraredVault.sol\":{\"keccak256\":\"0x2534b9957d782bec24f481872fef2f0476253c9cfd2bcb1757175ef2e5841541\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2743ce987d37cdbd598471ed394bf6c71e2d2c78b106eb19531d2307da7d8c9c\",\"dweb:/ipfs/QmX91MJMpRSm4aKb6uXM3uNU3h6LiEQ8EG64YVDrtk4zvH\"]},\"src/interfaces/IMultiRewards.sol\":{\"keccak256\":\"0x858dd5133276e6fe9911d25604666814c68d9ca1438d9afb75ea449daa2346f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d59995c58de7d32a036cd4e7adcb8cd0425136d3a52d19fa6b67f156e74c625\",\"dweb:/ipfs/QmZZQq2K2BCmvaCKUZaREtfz3GDKBoxRmTeeicdDtiHJ5E\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Recovered","anonymous":false},{"inputs":[{"internalType":"address","name":"rewardsToken","type":"address","indexed":true},{"internalType":"uint256","name":"reward","type":"uint256","indexed":false}],"type":"event","name":"RewardAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"address","name":"rewardsToken","type":"address","indexed":true},{"internalType":"uint256","name":"reward","type":"uint256","indexed":false}],"type":"event","name":"RewardPaid","anonymous":false},{"inputs":[{"internalType":"address","name":"rewardsToken","type":"address","indexed":false},{"internalType":"uint256","name":"rewardsDuration","type":"uint256","indexed":false}],"type":"event","name":"RewardStored","anonymous":false},{"inputs":[{"internalType":"address","name":"rewardsToken","type":"address","indexed":true},{"internalType":"address","name":"newDistributor","type":"address","indexed":true}],"type":"event","name":"RewardsDistributorUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":false},{"internalType":"uint256","name":"newDuration","type":"uint256","indexed":false}],"type":"event","name":"RewardsDurationUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Staked","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Withdrawn","anonymous":false},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"uint256","name":"_rewardsDuration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addReward"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"_rewardsToken","type":"address"}],"stateMutability":"view","type":"function","name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"exit"},{"inputs":[],"stateMutability":"view","type":"function","name":"getAllRewardTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"stateMutability":"view","type":"function","name":"getAllRewardsForUser","outputs":[{"internalType":"struct IInfraredVault.UserReward[]","name":"","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getReward"},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"}],"stateMutability":"view","type":"function","name":"getRewardForDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"getRewardForUser"},{"inputs":[],"stateMutability":"view","type":"function","name":"infrared","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"}],"stateMutability":"view","type":"function","name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_rewardToken","type":"address"},{"internalType":"uint256","name":"_reward","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"notifyRewardAmount"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"recoverERC20"},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"}],"stateMutability":"view","type":"function","name":"rewardData","outputs":[{"internalType":"address","name":"rewardsDistributor","type":"address"},{"internalType":"uint256","name":"rewardsDuration","type":"uint256"},{"internalType":"uint256","name":"periodFinish","type":"uint256"},{"internalType":"uint256","name":"rewardRate","type":"uint256"},{"internalType":"uint256","name":"lastUpdateTime","type":"uint256"},{"internalType":"uint256","name":"rewardPerTokenStored","type":"uint256"},{"internalType":"uint256","name":"rewardResidual","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"}],"stateMutability":"view","type":"function","name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"rewardTokens","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rewardsVault","outputs":[{"internalType":"contract IRewardVault","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"stake"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"togglePause"},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"uint256","name":"_rewardsDuration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateRewardsDuration"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdraw"}],"devdoc":{"kind":"dev","methods":{"addReward(address,uint256)":{"custom:access-control":"Requires INFRARED_ROLE","details":"Cannot exceed maximum number of reward tokens","params":{"_rewardsDuration":"The reward period duration","_rewardsToken":"The reward token to add"}},"balanceOf(address)":{"params":{"account":"The account to get the balance for"},"returns":{"_0":"The balance of staked tokens"}},"earned(address,address)":{"params":{"_rewardsToken":"The address of the rewards token","account":"The address of the account"},"returns":{"_0":"The amount of rewards earned"}},"exit()":{"details":"Combines withdraw and getReward operations"},"getAllRewardTokens()":{"returns":{"_0":"An array of reward token addresses"}},"getAllRewardsForUser(address)":{"params":{"_user":"The address of the user"},"returns":{"_0":"An array of UserReward structs"}},"getReward()":{"details":"Transfers all accrued rewards to the caller"},"getRewardForDuration(address)":{"params":{"_rewardsToken":"The address of the rewards token"},"returns":{"_0":"The total reward amount for the duration of a given rewards token"}},"getRewardForUser(address)":{"details":"Iterates through all reward tokens and transfers any accrued rewards to the user","params":{"_user":"The address of the user to claim rewards for"}},"infrared()":{"returns":{"_0":"The address of the Infrared contract"}},"lastTimeRewardApplicable(address)":{"params":{"_rewardsToken":"The address of the rewards token"},"returns":{"_0":"The timestamp when the reward was last applicable"}},"notifyRewardAmount(address,uint256)":{"details":"Updates internal reward rate calculations","params":{"_reward":"The amount of new rewards","_rewardToken":"The reward token address"}},"recoverERC20(address,address,uint256)":{"details":"Cannot recover staking token or active reward tokens","params":{"_amount":"The amount to recover","_to":"The address to receive the recovered tokens","_token":"The token to recover"}},"rewardData(address)":{"params":{"_rewardsToken":"The address of the rewards token"},"returns":{"lastUpdateTime":"The last time rewards were updated","periodFinish":"The timestamp when rewards finish","rewardPerTokenStored":"The last calculated reward per token","rewardRate":"The rate of rewards distributed per second","rewardsDistributor":"The address authorized to distribute rewards","rewardsDuration":"The duration of the reward period"}},"rewardPerToken(address)":{"params":{"_rewardsToken":"The address of the rewards token"},"returns":{"_0":"The reward amount per token"}},"rewardTokens(uint256)":{"params":{"index":"The index in the reward tokens array"},"returns":{"_0":"The address of the reward token at the given index"}},"rewardsVault()":{"returns":{"_0":"The rewards vault contract instance"}},"stake(uint256)":{"details":"Transfers `amount` of staking tokens from the user to this contract","params":{"amount":"The amount of tokens to stake"}},"togglePause()":{"custom:access-control":"Requires INFRARED_ROLE","details":"Affects all vault operations when paused"},"totalSupply()":{"returns":{"_0":"uint256 The total supply of staked tokens"}},"updateRewardsDuration(address,uint256)":{"custom:access-control":"Requires INFRARED_ROLE","details":"Only callable by Infrared contract","params":{"_rewardsDuration":"The new duration in seconds","_rewardsToken":"The address of the reward token"}},"withdraw(uint256)":{"details":"Transfers `amount` of staking tokens back to the user","params":{"amount":"The amount of tokens to withdraw"}}},"version":1},"userdoc":{"kind":"user","methods":{"addReward(address,uint256)":{"notice":"Adds a new reward token to the vault"},"balanceOf(address)":{"notice":"Returns the balance of staked tokens for the given account"},"earned(address,address)":{"notice":"Calculates the earned rewards for a given account and rewards token"},"exit()":{"notice":"Withdraws all staked tokens and claims pending rewards"},"getAllRewardTokens()":{"notice":"Returns all reward tokens"},"getAllRewardsForUser(address)":{"notice":"Returns all rewards for a userOnly up to date since the `lastUpdateTime`"},"getReward()":{"notice":"Claims all pending rewards for the caller"},"getRewardForDuration(address)":{"notice":"Calculates the total reward for the duration of a given rewards token"},"getRewardForUser(address)":{"notice":"Claims all pending rewards for a specified user"},"infrared()":{"notice":"Returns the Infrared protocol coordinator"},"lastTimeRewardApplicable(address)":{"notice":"Calculates the last time reward is applicable for a given rewards token"},"notifyRewardAmount(address,uint256)":{"notice":"Notifies the vault of newly added rewards"},"recoverERC20(address,address,uint256)":{"notice":"Recovers accidentally sent tokens"},"rewardData(address)":{"notice":"Gets the reward data for a given rewards token"},"rewardPerToken(address)":{"notice":"Calculates the reward per token for a given rewards token"},"rewardTokens(uint256)":{"notice":"Returns the reward token address at a specific index"},"rewardsVault()":{"notice":"Returns the associated Berachain rewards vault"},"stake(uint256)":{"notice":"Stakes tokens into the contract"},"togglePause()":{"notice":"Toggles pause state of the vault"},"totalSupply()":{"notice":"Returns the total amount of staked tokens in the contract"},"updateRewardsDuration(address,uint256)":{"notice":"Updates reward duration for a specific reward token"},"withdraw(uint256)":{"notice":"Withdraws staked tokens from the contract"}},"version":1}},"settings":{"remappings":["@berachain/=lib/contracts-monorepo/src/","@forge-std/=lib/forge-std/src/","@mock/=lib/contracts-monorepo/test/mock/","@openzeppelin-gov-ext/=lib/contracts-monorepo/node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/","@openzeppelin-gov/=lib/contracts-monorepo/node_modules/@openzeppelin/contracts-upgradeable/governance/","@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb/=lib/prb-test/src/","@prb/math/=lib/contracts-monorepo/node_modules/@prb/math/","@pythnetwork/=lib/contracts-monorepo/node_modules/@pythnetwork/pyth-sdk-solidity/","@solmate/=lib/solmate/src/","contracts-monorepo/=lib/contracts-monorepo/src/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","prb-math/=lib/prb-math/src/","prb-test/=lib/prb-test/src/","solady/src/=lib/solady/src/","solady/test/=lib/solady/test/","solmate/=lib/solmate/src/","transient-goodies/=lib/contracts-monorepo/lib/transient-goodies/src/"],"optimizer":{"enabled":true,"runs":1},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IInfraredVault.sol":"IInfraredVault"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/contracts-monorepo/src/base/IStakingRewards.sol":{"keccak256":"0xbc9c5e63529aa547da9056deea1eb3d3275be79cb03ec141eb1488045b9f06dc","urls":["bzz-raw://8d0196a4ecda33cdeab2145e7f7ab832dae8c2e882b300edb2b75ce5c99d02d6","dweb:/ipfs/Qmeuu7U3qWV6WqjACrjso5hgYaVtKyDwc867rgZm56Agbo"],"license":"BUSL-1.1"},"lib/contracts-monorepo/src/base/IStakingRewardsErrors.sol":{"keccak256":"0xb6f2b90f37ef86721c2fffcc7ab9ef3cbe7857a9cae03aeab4a902e3d192b5a3","urls":["bzz-raw://71f9c77e85e6d5c8447663edd4078cecde127679c49befd0b4f8d8b675f3ea0b","dweb:/ipfs/QmY9g48MGDfFYLtdA8NgEC8dHvnLZGb33wbuQL8pXXqZxp"],"license":"BUSL-1.1"},"lib/contracts-monorepo/src/pol/interfaces/IPOLErrors.sol":{"keccak256":"0x0c1f5649b97aab159d3a9bf63295ce36803b2f3b4febe2fbe12edcbc524e2e43","urls":["bzz-raw://24756391ec06a77aa0645b929c80e0e9f98d185ab0fabdc4964ad7117371a08a","dweb:/ipfs/QmVwvweGzmrQKYuVHZwC13mrfZwaEQFr6nCh5J5J2fM3bv"],"license":"BUSL-1.1"},"lib/contracts-monorepo/src/pol/interfaces/IRewardVault.sol":{"keccak256":"0x715034f3ce499510dd02d31ae8a9363d9e29cad564bd60a7c227498af9c5ee69","urls":["bzz-raw://99ace33a1d80ad6ed6253190a630f9dd6e194e0e811e54f024ac3b760ce6a658","dweb:/ipfs/QmQxRtJzPrazFdBCeruxqbfiQhi3QhAmm3kTEnoHZA4pv1"],"license":"BUSL-1.1"},"src/interfaces/IInfraredVault.sol":{"keccak256":"0x2534b9957d782bec24f481872fef2f0476253c9cfd2bcb1757175ef2e5841541","urls":["bzz-raw://2743ce987d37cdbd598471ed394bf6c71e2d2c78b106eb19531d2307da7d8c9c","dweb:/ipfs/QmX91MJMpRSm4aKb6uXM3uNU3h6LiEQ8EG64YVDrtk4zvH"],"license":"MIT"},"src/interfaces/IMultiRewards.sol":{"keccak256":"0x858dd5133276e6fe9911d25604666814c68d9ca1438d9afb75ea449daa2346f6","urls":["bzz-raw://0d59995c58de7d32a036cd4e7adcb8cd0425136d3a52d19fa6b67f156e74c625","dweb:/ipfs/QmZZQq2K2BCmvaCKUZaREtfz3GDKBoxRmTeeicdDtiHJ5E"],"license":"MIT"}},"version":1},"id":100}