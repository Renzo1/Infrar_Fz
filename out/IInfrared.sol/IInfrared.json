{"abi":[{"type":"function","name":"activateBoosts","inputs":[{"name":"_pubkeys","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addIncentives","inputs":[{"name":"_stakingToken","type":"address","internalType":"address"},{"name":"_rewardsToken","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addReward","inputs":[{"name":"_stakingToken","type":"address","internalType":"address"},{"name":"_rewardsToken","type":"address","internalType":"address"},{"name":"_rewardsDuration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addValidators","inputs":[{"name":"_validators","type":"tuple[]","internalType":"struct ValidatorTypes.Validator[]","components":[{"name":"pubkey","type":"bytes","internalType":"bytes"},{"name":"addr","type":"address","internalType":"address"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cancelBoosts","inputs":[{"name":"_pubkeys","type":"bytes[]","internalType":"bytes[]"},{"name":"_amts","type":"uint128[]","internalType":"uint128[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cancelDropBoosts","inputs":[{"name":"pubkeys","type":"bytes[]","internalType":"bytes[]"},{"name":"amounts","type":"uint128[]","internalType":"uint128[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chef","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IBeraChef"}],"stateMutability":"view"},{"type":"function","name":"claimLostRewardsOnVault","inputs":[{"name":"_asset","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimProtocolFees","inputs":[{"name":"_to","type":"address","internalType":"address"},{"name":"_token","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"collectBribes","inputs":[{"name":"_token","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"collector","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IBribeCollector"}],"stateMutability":"view"},{"type":"function","name":"delegateBGT","inputs":[{"name":"_delegatee","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"distributor","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IInfraredDistributor"}],"stateMutability":"view"},{"type":"function","name":"dropBoosts","inputs":[{"name":"pubkeys","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fees","inputs":[{"name":"i","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBGTBalance","inputs":[],"outputs":[{"name":"bgtBalance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"harvestBase","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"harvestBoostRewards","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"harvestBribes","inputs":[{"name":"_tokens","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"harvestOperatorRewards","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"harvestVault","inputs":[{"name":"_asset","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"honey","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract ERC20"}],"stateMutability":"view"},{"type":"function","name":"ibera","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IInfraredBERA"}],"stateMutability":"view"},{"type":"function","name":"ibgt","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract InfraredBGT"}],"stateMutability":"view"},{"type":"function","name":"ibgtVault","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IInfraredVault"}],"stateMutability":"view"},{"type":"function","name":"infraredValidators","inputs":[],"outputs":[{"name":"validators","type":"tuple[]","internalType":"struct ValidatorTypes.Validator[]","components":[{"name":"pubkey","type":"bytes","internalType":"bytes"},{"name":"addr","type":"address","internalType":"address"}]}],"stateMutability":"view"},{"type":"function","name":"isInfraredValidator","inputs":[{"name":"_pubkey","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"numInfraredValidators","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"protocolFeeAmounts","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"queueBoosts","inputs":[{"name":"_pubkeys","type":"bytes[]","internalType":"bytes[]"},{"name":"_amts","type":"uint128[]","internalType":"uint128[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"queueDropBoosts","inputs":[{"name":"pubkeys","type":"bytes[]","internalType":"bytes[]"},{"name":"amounts","type":"uint128[]","internalType":"uint128[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"queueNewCuttingBoard","inputs":[{"name":"_pubkey","type":"bytes","internalType":"bytes"},{"name":"_startBlock","type":"uint64","internalType":"uint64"},{"name":"_weights","type":"tuple[]","internalType":"struct IBeraChef.Weight[]","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"percentageNumerator","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recoverERC20","inputs":[{"name":"_to","type":"address","internalType":"address"},{"name":"_token","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recoverERC20FromVault","inputs":[{"name":"_asset","type":"address","internalType":"address"},{"name":"_to","type":"address","internalType":"address"},{"name":"_token","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"red","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IRED"}],"stateMutability":"view"},{"type":"function","name":"registerVault","inputs":[{"name":"_asset","type":"address","internalType":"address"}],"outputs":[{"name":"vault","type":"address","internalType":"contract IInfraredVault"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeValidators","inputs":[{"name":"_pubkeys","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replaceValidator","inputs":[{"name":"_current","type":"bytes","internalType":"bytes"},{"name":"_new","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rewardsDuration","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"rewardsFactory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IRewardVaultFactory"}],"stateMutability":"view"},{"type":"function","name":"setIBGT","inputs":[{"name":"_ibgt","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setRed","inputs":[{"name":"_red","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toggleVault","inputs":[{"name":"_asset","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateFee","inputs":[{"name":"_t","type":"uint8","internalType":"enum ConfigTypes.FeeType"},{"name":"_fee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateInfraredBERABribesWeight","inputs":[{"name":"_weight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateRedMintRate","inputs":[{"name":"_redMintRate","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateRewardsDuration","inputs":[{"name":"_rewardsDuration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateRewardsDurationForVault","inputs":[{"name":"_stakingToken","type":"address","internalType":"address"},{"name":"_rewardsToken","type":"address","internalType":"address"},{"name":"_rewardsDuration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateWhiteListedRewardTokens","inputs":[{"name":"_token","type":"address","internalType":"address"},{"name":"_whitelisted","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"vaultRegistry","inputs":[{"name":"_asset","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"contract IInfraredVault"}],"stateMutability":"view"},{"type":"function","name":"voter","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IVoter"}],"stateMutability":"view"},{"type":"function","name":"wbera","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IWBERA"}],"stateMutability":"view"},{"type":"function","name":"whitelistedRewardTokens","inputs":[{"name":"_token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"ActivatedBoosts","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_pubkeys","type":"bytes[]","indexed":false,"internalType":"bytes[]"}],"anonymous":false},{"type":"event","name":"BaseHarvested","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_bgtAmt","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"BribeSupplied","inputs":[{"name":"_recipient","type":"address","indexed":true,"internalType":"address"},{"name":"_token","type":"address","indexed":true,"internalType":"address"},{"name":"_amt","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"BribesCollected","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_token","type":"address","indexed":false,"internalType":"address"},{"name":"_amtWiberaVault","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_amtIbgtVault","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"CancelDropBoosts","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"pubkeys","type":"bytes[]","indexed":true,"internalType":"bytes[]"},{"name":"amounts","type":"uint128[]","indexed":false,"internalType":"uint128[]"}],"anonymous":false},{"type":"event","name":"CancelledBoosts","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_pubkeys","type":"bytes[]","indexed":false,"internalType":"bytes[]"},{"name":"_amts","type":"uint128[]","indexed":false,"internalType":"uint128[]"}],"anonymous":false},{"type":"event","name":"DroppedBoosts","inputs":[{"name":"_sender","type":"address","indexed":true,"internalType":"address"},{"name":"_pubkeys","type":"bytes[]","indexed":false,"internalType":"bytes[]"}],"anonymous":false},{"type":"event","name":"FeeUpdated","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_feeType","type":"uint8","indexed":false,"internalType":"enum ConfigTypes.FeeType"},{"name":"_oldFeeRate","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_newFeeRate","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"IBGTSet","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_ibgt","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"InfraredBERABribesWeightUpdated","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_oldWeight","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_newWeight","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"InfraredBGTSupplied","inputs":[{"name":"_vault","type":"address","indexed":true,"internalType":"address"},{"name":"_ibgtAmt","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_iredAmt","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"InfraredBGTUpdated","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_oldIbgt","type":"address","indexed":false,"internalType":"address"},{"name":"_newIbgt","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"InfraredBGTVaultUpdated","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_oldIbgtVault","type":"address","indexed":false,"internalType":"address"},{"name":"_newIbgtVault","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"IredMintRateUpdated","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_oldMintRate","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_newMintRate","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"NewVault","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_asset","type":"address","indexed":true,"internalType":"address"},{"name":"_vault","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OperatorRewardsDistributed","inputs":[{"name":"_ibera","type":"address","indexed":true,"internalType":"address"},{"name":"_distributor","type":"address","indexed":true,"internalType":"address"},{"name":"_amt","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ProtocolFees","inputs":[{"name":"_token","type":"address","indexed":true,"internalType":"address"},{"name":"_amt","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_voterAmt","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ProtocolFeesClaimed","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_to","type":"address","indexed":false,"internalType":"address"},{"name":"_token","type":"address","indexed":false,"internalType":"address"},{"name":"_amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"QueueDropBoosts","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"pubkeys","type":"bytes[]","indexed":true,"internalType":"bytes[]"},{"name":"amounts","type":"uint128[]","indexed":false,"internalType":"uint128[]"}],"anonymous":false},{"type":"event","name":"QueuedBoosts","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_pubkeys","type":"bytes[]","indexed":false,"internalType":"bytes[]"},{"name":"_amts","type":"uint128[]","indexed":false,"internalType":"uint128[]"}],"anonymous":false},{"type":"event","name":"Recovered","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_token","type":"address","indexed":true,"internalType":"address"},{"name":"_amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RedSet","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_red","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Redelegated","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_from","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"_to","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"_amt","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardSupplied","inputs":[{"name":"_vault","type":"address","indexed":true,"internalType":"address"},{"name":"_token","type":"address","indexed":true,"internalType":"address"},{"name":"_amt","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardTokenNotSupported","inputs":[{"name":"_token","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RewardsDurationUpdated","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_oldDuration","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_newDuration","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Undelegated","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_pubkey","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"_amt","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UpdatedRedMintRate","inputs":[{"name":"oldMintRate","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newMintRate","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"sender","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ValidatorHarvested","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_validator","type":"bytes","indexed":true,"internalType":"bytes"},{"name":"_rewards","type":"tuple[]","indexed":false,"internalType":"struct DataTypes.Token[]","components":[{"name":"tokenAddress","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"_bgtAmt","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ValidatorReplaced","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_current","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"_new","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"ValidatorsAdded","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_validators","type":"tuple[]","indexed":false,"internalType":"struct ValidatorTypes.Validator[]","components":[{"name":"pubkey","type":"bytes","internalType":"bytes"},{"name":"addr","type":"address","internalType":"address"}]}],"anonymous":false},{"type":"event","name":"ValidatorsRemoved","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_pubkeys","type":"bytes[]","indexed":false,"internalType":"bytes[]"}],"anonymous":false},{"type":"event","name":"VaultHarvested","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_asset","type":"address","indexed":true,"internalType":"address"},{"name":"_vault","type":"address","indexed":true,"internalType":"address"},{"name":"_bgtAmt","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"VaultRegistrationPauseStatus","inputs":[{"name":"pause","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"WhiteListedRewardTokensUpdated","inputs":[{"name":"_sender","type":"address","indexed":false,"internalType":"address"},{"name":"_token","type":"address","indexed":true,"internalType":"address"},{"name":"_wasWhitelisted","type":"bool","indexed":false,"internalType":"bool"},{"name":"_isWhitelisted","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"activateBoosts(bytes[])":"93857df5","addIncentives(address,address,uint256)":"1b75e798","addReward(address,address,uint256)":"d0ed26ae","addValidators((bytes,address)[])":"062b79fb","cancelBoosts(bytes[],uint128[])":"c277a2d6","cancelDropBoosts(bytes[],uint128[])":"f667b703","chef()":"1fc8bc5d","claimLostRewardsOnVault(address)":"dcaae5c7","claimProtocolFees(address,address,uint256)":"d6dc181e","collectBribes(address,uint256)":"d9ea2d7d","collector()":"913e77ad","delegateBGT(address)":"5137bbdf","distributor()":"bfe10928","dropBoosts(bytes[])":"3f1b754e","fees(uint256)":"4acc79ed","getBGTBalance()":"f0d68244","harvestBase()":"a3aad78f","harvestBoostRewards()":"af1c921d","harvestBribes(address[])":"e3a65fc1","harvestOperatorRewards()":"549e71d0","harvestVault(address)":"0a2f023e","honey()":"36b2c4b2","ibera()":"5c9750ee","ibgt()":"3dafa4f3","ibgtVault()":"fd64c377","infraredValidators()":"adc51dcb","isInfraredValidator(bytes)":"bab97c7b","numInfraredValidators()":"af34596b","protocolFeeAmounts(address)":"1f89b683","queueBoosts(bytes[],uint128[])":"60930183","queueDropBoosts(bytes[],uint128[])":"694be773","queueNewCuttingBoard(bytes,uint64,(address,uint96)[])":"a66ce82d","recoverERC20(address,address,uint256)":"1171bda9","recoverERC20FromVault(address,address,address,uint256)":"e18cb2c0","red()":"2930cf24","registerVault(address)":"67ccd1cb","removeValidators(bytes[])":"d6fc45fd","replaceValidator(bytes,bytes)":"37f6cfe7","rewardsDuration()":"386a9525","rewardsFactory()":"51d08944","setIBGT(address)":"6ada0942","setRed(address)":"b5e8e4c2","toggleVault(address)":"26e10ef6","updateFee(uint8,uint256)":"7052a5e5","updateInfraredBERABribesWeight(uint256)":"0488da20","updateRedMintRate(uint256)":"59b84fa9","updateRewardsDuration(uint256)":"d94ef29d","updateRewardsDurationForVault(address,address,uint256)":"792868bb","updateWhiteListedRewardTokens(address,bool)":"5787077d","vaultRegistry(address)":"5487beb6","voter()":"46c96aac","wbera()":"31f41a33","whitelistedRewardTokens(address)":"5225f987"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"_pubkeys\",\"type\":\"bytes[]\"}],\"name\":\"ActivatedBoosts\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_bgtAmt\",\"type\":\"uint256\"}],\"name\":\"BaseHarvested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"BribeSupplied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amtWiberaVault\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amtIbgtVault\",\"type\":\"uint256\"}],\"name\":\"BribesCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes[]\",\"name\":\"pubkeys\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint128[]\",\"name\":\"amounts\",\"type\":\"uint128[]\"}],\"name\":\"CancelDropBoosts\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"_pubkeys\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint128[]\",\"name\":\"_amts\",\"type\":\"uint128[]\"}],\"name\":\"CancelledBoosts\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"_pubkeys\",\"type\":\"bytes[]\"}],\"name\":\"DroppedBoosts\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum ConfigTypes.FeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_oldFeeRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newFeeRate\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_ibgt\",\"type\":\"address\"}],\"name\":\"IBGTSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_oldWeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newWeight\",\"type\":\"uint256\"}],\"name\":\"InfraredBERABribesWeightUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ibgtAmt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_iredAmt\",\"type\":\"uint256\"}],\"name\":\"InfraredBGTSupplied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldIbgt\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newIbgt\",\"type\":\"address\"}],\"name\":\"InfraredBGTUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldIbgtVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newIbgtVault\",\"type\":\"address\"}],\"name\":\"InfraredBGTVaultUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_oldMintRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMintRate\",\"type\":\"uint256\"}],\"name\":\"IredMintRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"NewVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_ibera\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"OperatorRewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_voterAmt\",\"type\":\"uint256\"}],\"name\":\"ProtocolFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeesClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes[]\",\"name\":\"pubkeys\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint128[]\",\"name\":\"amounts\",\"type\":\"uint128[]\"}],\"name\":\"QueueDropBoosts\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"_pubkeys\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint128[]\",\"name\":\"_amts\",\"type\":\"uint128[]\"}],\"name\":\"QueuedBoosts\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_red\",\"type\":\"address\"}],\"name\":\"RedSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_from\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_to\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"Redelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"RewardSupplied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"RewardTokenNotSupported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_oldDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newDuration\",\"type\":\"uint256\"}],\"name\":\"RewardsDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_pubkey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"Undelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMintRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMintRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"UpdatedRedMintRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"_validator\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct DataTypes.Token[]\",\"name\":\"_rewards\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_bgtAmt\",\"type\":\"uint256\"}],\"name\":\"ValidatorHarvested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_current\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_new\",\"type\":\"bytes\"}],\"name\":\"ValidatorReplaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct ValidatorTypes.Validator[]\",\"name\":\"_validators\",\"type\":\"tuple[]\"}],\"name\":\"ValidatorsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"_pubkeys\",\"type\":\"bytes[]\"}],\"name\":\"ValidatorsRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_bgtAmt\",\"type\":\"uint256\"}],\"name\":\"VaultHarvested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"VaultRegistrationPauseStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_wasWhitelisted\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_isWhitelisted\",\"type\":\"bool\"}],\"name\":\"WhiteListedRewardTokensUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_pubkeys\",\"type\":\"bytes[]\"}],\"name\":\"activateBoosts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addIncentives\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsDuration\",\"type\":\"uint256\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"internalType\":\"struct ValidatorTypes.Validator[]\",\"name\":\"_validators\",\"type\":\"tuple[]\"}],\"name\":\"addValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_pubkeys\",\"type\":\"bytes[]\"},{\"internalType\":\"uint128[]\",\"name\":\"_amts\",\"type\":\"uint128[]\"}],\"name\":\"cancelBoosts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"pubkeys\",\"type\":\"bytes[]\"},{\"internalType\":\"uint128[]\",\"name\":\"amounts\",\"type\":\"uint128[]\"}],\"name\":\"cancelDropBoosts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chef\",\"outputs\":[{\"internalType\":\"contract IBeraChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"claimLostRewardsOnVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claimProtocolFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"collectBribes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collector\",\"outputs\":[{\"internalType\":\"contract IBribeCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegatee\",\"type\":\"address\"}],\"name\":\"delegateBGT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributor\",\"outputs\":[{\"internalType\":\"contract IInfraredDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"pubkeys\",\"type\":\"bytes[]\"}],\"name\":\"dropBoosts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBGTBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bgtBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestBase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestBoostRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"harvestBribes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestOperatorRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"harvestVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"honey\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ibera\",\"outputs\":[{\"internalType\":\"contract IInfraredBERA\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ibgt\",\"outputs\":[{\"internalType\":\"contract InfraredBGT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ibgtVault\",\"outputs\":[{\"internalType\":\"contract IInfraredVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"infraredValidators\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"internalType\":\"struct ValidatorTypes.Validator[]\",\"name\":\"validators\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_pubkey\",\"type\":\"bytes\"}],\"name\":\"isInfraredValidator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numInfraredValidators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"protocolFeeAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_pubkeys\",\"type\":\"bytes[]\"},{\"internalType\":\"uint128[]\",\"name\":\"_amts\",\"type\":\"uint128[]\"}],\"name\":\"queueBoosts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"pubkeys\",\"type\":\"bytes[]\"},{\"internalType\":\"uint128[]\",\"name\":\"amounts\",\"type\":\"uint128[]\"}],\"name\":\"queueDropBoosts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_pubkey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_startBlock\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"percentageNumerator\",\"type\":\"uint96\"}],\"internalType\":\"struct IBeraChef.Weight[]\",\"name\":\"_weights\",\"type\":\"tuple[]\"}],\"name\":\"queueNewCuttingBoard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20FromVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"red\",\"outputs\":[{\"internalType\":\"contract IRED\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"registerVault\",\"outputs\":[{\"internalType\":\"contract IInfraredVault\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_pubkeys\",\"type\":\"bytes[]\"}],\"name\":\"removeValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_current\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_new\",\"type\":\"bytes\"}],\"name\":\"replaceValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsFactory\",\"outputs\":[{\"internalType\":\"contract IRewardVaultFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ibgt\",\"type\":\"address\"}],\"name\":\"setIBGT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_red\",\"type\":\"address\"}],\"name\":\"setRed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"toggleVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ConfigTypes.FeeType\",\"name\":\"_t\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"updateFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"updateInfraredBERABribesWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_redMintRate\",\"type\":\"uint256\"}],\"name\":\"updateRedMintRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsDuration\",\"type\":\"uint256\"}],\"name\":\"updateRewardsDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsDuration\",\"type\":\"uint256\"}],\"name\":\"updateRewardsDurationForVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_whitelisted\",\"type\":\"bool\"}],\"name\":\"updateWhiteListedRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"vaultRegistry\",\"outputs\":[{\"internalType\":\"contract IInfraredVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voter\",\"outputs\":[{\"internalType\":\"contract IVoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wbera\",\"outputs\":[{\"internalType\":\"contract IWBERA\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"whitelistedRewardTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ActivatedBoosts(address,bytes[])\":{\"params\":{\"_pubkeys\":\"The addresses of the validators which were boosted.\",\"_sender\":\"The address that initiated the activation.\"}},\"BaseHarvested(address,uint256)\":{\"params\":{\"_bgtAmt\":\"The amount of BGT harvested.\",\"_sender\":\"The address that initiated the harvest.\"}},\"BribeSupplied(address,address,uint256)\":{\"params\":{\"_amt\":\"The amount of the bribe reward token supplied.\",\"_recipient\":\"The address receiving the bribe.\",\"_token\":\"The address of the token being supplied as a bribe reward.\"}},\"BribesCollected(address,address,uint256,uint256)\":{\"params\":{\"_amtIbgtVault\":\"The amount of collected bribe sent to the iBGT vault.\",\"_amtWiberaVault\":\"The amount of collected bribe sent to the wrapped iBERA vault.\",\"_sender\":\"The address that initiated the bribe collection.\",\"_token\":\"The payout token from bribe collection.\"}},\"CancelDropBoosts(address,bytes[],uint128[])\":{\"params\":{\"amounts\":\"The amounts of tokens to remove from boosts.\",\"pubkeys\":\"The addresses of the validators to which tokens were queued for boosts.\",\"user\":\"The address of the user.\"}},\"CancelledBoosts(address,bytes[],uint128[])\":{\"params\":{\"_amts\":\"The amounts of tokens to remove from boosts.\",\"_pubkeys\":\"The pubkeys of the validators to which tokens were queued for boosts.\",\"_sender\":\"The address that initiated the cancellation.\"}},\"DroppedBoosts(address,bytes[])\":{\"params\":{\"_pubkeys\":\"The addresses of the validators to which tokens were queued for boosts.\",\"_sender\":\"The address that initiated the cancellation.\"}},\"FeeUpdated(address,uint8,uint256,uint256)\":{\"params\":{\"_feeType\":\"The fee type updated.\",\"_newFeeRate\":\"The new protocol fee rate.\",\"_oldFeeRate\":\"The old protocol fee rate.\",\"_sender\":\"The address that initiated the update.\"}},\"IBGTSet(address,address)\":{\"params\":{\"_ibgt\":\"The address of the iBGT token.\",\"_sender\":\"The address that initiated the update.\"}},\"InfraredBERABribesWeightUpdated(address,uint256,uint256)\":{\"params\":{\"_newWeight\":\"The new value of the weight.\",\"_oldWeight\":\"The old value of the weight.\",\"_sender\":\"The address that initiated the update.\"}},\"InfraredBGTSupplied(address,uint256,uint256)\":{\"params\":{\"_ibgtAmt\":\"The amount of InfraredBGT tokens supplied to vault.\",\"_iredAmt\":\"The amount of IRED tokens supplied to vault as additional reward from protocol.\",\"_vault\":\"The address of the vault receiving the InfraredBGT and IRED tokens.\"}},\"InfraredBGTUpdated(address,address,address)\":{\"params\":{\"_newIbgt\":\"The new address of the InfraredBGT token.\",\"_oldIbgt\":\"The previous address of the InfraredBGT token.\",\"_sender\":\"The address that initiated the update.\"}},\"InfraredBGTVaultUpdated(address,address,address)\":{\"params\":{\"_newIbgtVault\":\"The new address of the InfraredBGT vault.\",\"_oldIbgtVault\":\"The previous address of the InfraredBGT vault.\",\"_sender\":\"The address that initiated the update.\"}},\"IredMintRateUpdated(address,uint256,uint256)\":{\"params\":{\"_newMintRate\":\"The new IRED mint rate.\",\"_oldMintRate\":\"The previous IRED mint rate.\",\"_sender\":\"The address that initiated the update.\"}},\"NewVault(address,address,address)\":{\"params\":{\"_asset\":\"The address of the asset for which the vault is registered\",\"_sender\":\"The address that initiated the vault registration\",\"_vault\":\"The address of the newly created vault\"}},\"OperatorRewardsDistributed(address,address,uint256)\":{\"params\":{\"_amt\":\"The amount of WBERA tokens supplied to distributor.\",\"_distributor\":\"The address of the distributor receiving the InfraredBGT tokens.\",\"_ibera\":\"token the rewards are denominated in\"}},\"ProtocolFees(address,uint256,uint256)\":{\"params\":{\"_amt\":\"The amount of protocol fees received.\",\"_token\":\"The address of the token protocol fees in.\",\"_voterAmt\":\"The amount of protocol fees received by the voter.\"}},\"ProtocolFeesClaimed(address,address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of protocol fees claimed.\",\"_sender\":\"The address that initiated the claim.\",\"_to\":\"The address to send protocol fees to.\",\"_token\":\"The address of the token protocol fees in.\"}},\"QueueDropBoosts(address,bytes[],uint128[])\":{\"params\":{\"amounts\":\"The amounts of tokens to remove from boosts.\",\"pubkeys\":\"The addresses of the validators to which tokens were queued for boosts.\",\"user\":\"The address of the user.\"}},\"QueuedBoosts(address,bytes[],uint128[])\":{\"params\":{\"_amts\":\"The amounts of tokens that were queued.\",\"_pubkeys\":\"The addresses of the validators to which tokens are queued for boosts.\",\"_sender\":\"The address that initiated the boost.\"}},\"Recovered(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of the token recovered.\",\"_sender\":\"The address that initiated the recovery.\",\"_token\":\"The address of the token being recovered.\"}},\"RedSet(address,address)\":{\"params\":{\"_red\":\"The address of the RED token.\",\"_sender\":\"The address that initiated the update.\"}},\"Redelegated(address,bytes,bytes,uint256)\":{\"params\":{\"_amt\":\"The amount of tokens that were redelegated.\",\"_from\":\"The public key of the validator from which tokens are redelegated.\",\"_sender\":\"The address that initiated the redelegation.\",\"_to\":\"The public key of the validator to which tokens are redelegated.\"}},\"RewardSupplied(address,address,uint256)\":{\"params\":{\"_amt\":\"The amount of the reward token supplied.\",\"_token\":\"The address of the token being supplied as a reward.\",\"_vault\":\"The address of the vault receiving the reward.\"}},\"RewardTokenNotSupported(address)\":{\"params\":{\"_token\":\"The address of the reward token.\"}},\"RewardsDurationUpdated(address,uint256,uint256)\":{\"params\":{\"_newDuration\":\"The new rewards duration\",\"_oldDuration\":\"The previous rewards duration\",\"_sender\":\"The address that initiated the update\"}},\"Undelegated(address,bytes,uint256)\":{\"params\":{\"_amt\":\"The amount of tokens that were undelegated.\",\"_pubkey\":\"The pubkey of the validator from which tokens are undelegated.\",\"_sender\":\"The address that initiated the undelegation.\"}},\"UpdatedRedMintRate(uint256,uint256,address)\":{\"params\":{\"newMintRate\":\"The new mint rate for RED\",\"oldMintRate\":\"The old mint rate for RED\",\"sender\":\"The address that initiated the update\"}},\"ValidatorHarvested(address,bytes,(address,uint256)[],uint256)\":{\"params\":{\"_bgtAmt\":\"The amount of BGT included in the rewards.\",\"_rewards\":\"An array of tokens and amounts harvested.\",\"_sender\":\"The address that initiated the harvest.\",\"_validator\":\"The public key of the validator.\"}},\"ValidatorReplaced(address,bytes,bytes)\":{\"params\":{\"_current\":\"The pubkey of the current validator being replaced.\",\"_new\":\"The pubkey of the new validator.\",\"_sender\":\"The address that initiated the replacement.\"}},\"ValidatorsAdded(address,(bytes,address)[])\":{\"params\":{\"_sender\":\"The address that initiated the addition.\",\"_validators\":\"An array of validators that were added.\"}},\"ValidatorsRemoved(address,bytes[])\":{\"params\":{\"_pubkeys\":\"An array of validators' pubkeys that were removed.\",\"_sender\":\"The address that initiated the removal.\"}},\"VaultHarvested(address,address,address,uint256)\":{\"params\":{\"_asset\":\"The asset associated with the vault being harvested.\",\"_bgtAmt\":\"The amount of BGT harvested.\",\"_sender\":\"The address that initiated the harvest.\",\"_vault\":\"The address of the vault being harvested.\"}},\"VaultRegistrationPauseStatus(bool)\":{\"params\":{\"pause\":\"True if new vault creation is paused\"}},\"WhiteListedRewardTokensUpdated(address,address,bool,bool)\":{\"params\":{\"_isWhitelisted\":\"The new whitelist status of the token.\",\"_sender\":\"The address that initiated the update.\",\"_token\":\"The address of the token being updated.\",\"_wasWhitelisted\":\"The previous whitelist status of the token.\"}}},\"kind\":\"dev\",\"methods\":{\"activateBoosts(bytes[])\":{\"params\":{\"_pubkeys\":\"bytes[] memory The pubkeys of the validators to activate boosts for.\"}},\"addIncentives(address,address,uint256)\":{\"custom:access\":\"Callable when contract is initialized\",\"custom:error\":\"ZeroAmount if _amount is 0NoRewardsVault if vault doesn't exist for _stakingTokenRewardTokenNotWhitelisted if reward token hasn't been configured for the vault\",\"custom:security\":\"Requires caller to have approved this contract to spend _rewardsToken\",\"details\":\"Transfers reward tokens from caller to this contract, then notifies vault of new rewards\",\"params\":{\"_amount\":\"The amount of reward tokens to add as incentives\",\"_rewardsToken\":\"The address of the token being added as incentives\",\"_stakingToken\":\"The address of the staking token associated with the vault\"}},\"addReward(address,address,uint256)\":{\"custom:error\":\"ZeroAmount if _rewardsDuration is 0RewardTokenNotWhitelisted if _rewardsToken is not whitelistedNoRewardsVault if vault doesn't exist for _stakingToken\",\"details\":\"Only callable by governance when contract is initialized\",\"params\":{\"_rewardsDuration\":\"The duration period for the rewards distribution, in seconds\",\"_rewardsToken\":\"The address of the token to be added as a reward\",\"_stakingToken\":\"The address of the staking token associated with the vault\"}},\"addValidators((bytes,address)[])\":{\"params\":{\"_validators\":\"Validator[] memory The validators to add.\"}},\"cancelBoosts(bytes[],uint128[])\":{\"details\":\"`_pubkeys` need not be in the current validator set in case just removed but need to cancel.\",\"params\":{\"_amts\":\"uint128[] memory The amounts of BGT to remove from the queued boosts.\",\"_pubkeys\":\"bytes[] memory The pubkeys of the validators to remove boosts for.\"}},\"cancelDropBoosts(bytes[],uint128[])\":{\"params\":{\"amounts\":\"Amounts of BGT to remove from the queued drop boosts.\",\"pubkeys\":\"bytes[] memory The pubkeys of the validators to remove boost from.\"}},\"chef()\":{\"returns\":{\"_0\":\"IBeraChef instance of the BeraChef contract address\"}},\"claimLostRewardsOnVault(address)\":{\"details\":\"Only callable by governance, will revert if vault doesn't exist\",\"params\":{\"_asset\":\"The address of the staking asset associated with the vault to claim lost rewards on\"}},\"claimProtocolFees(address,address,uint256)\":{\"params\":{\"_amount\":\"uint256 The amount of accumulated fees to claim\",\"_to\":\"address The recipient of the fees\",\"_token\":\"address The token to claim fees in\"}},\"collector()\":{\"returns\":{\"_0\":\"IBribeCollector The bribe collector contract address\"}},\"delegateBGT(address)\":{\"params\":{\"_delegatee\":\"address The address to delegate votes to\"}},\"distributor()\":{\"returns\":{\"_0\":\"IInfraredDistributor instance of the distributor contract address\"}},\"dropBoosts(bytes[])\":{\"params\":{\"pubkeys\":\"bytes[] memory The pubkeys of the validators to remove boost from.\"}},\"fees(uint256)\":{\"params\":{\"i\":\"The index of the fee rate\"},\"returns\":{\"_0\":\"uint256 The fee rate\"}},\"getBGTBalance()\":{\"returns\":{\"bgtBalance\":\"The BGT balance held by this address\"}},\"harvestBoostRewards()\":{\"details\":\"Sends rewards to iBGT vault.\"},\"harvestBribes(address[])\":{\"params\":{\"_tokens\":\"address[] memory The addresses of the tokens to harvest in the contract.\"}},\"harvestVault(address)\":{\"params\":{\"_asset\":\"address The address of the staking asset that the vault is for.\"}},\"honey()\":{\"returns\":{\"_0\":\"ERC20 The honey token contract address\"}},\"ibera()\":{\"returns\":{\"_0\":\"returns IInfraredBERAFeeReceivor instanace of iBeraFeeReceivor\"}},\"ibgt()\":{\"returns\":{\"_0\":\"IInfraredBGT The InfraredBGT token contract address\"}},\"ibgtVault()\":{\"returns\":{\"_0\":\"IInfraredVault instance of the iBGT vault contract address\"}},\"infraredValidators()\":{\"returns\":{\"validators\":\"Validator[] memory The set of infrared validators.\"}},\"isInfraredValidator(bytes)\":{\"params\":{\"_pubkey\":\"bytes      The pubkey of the validator to check.\"},\"returns\":{\"_0\":\"_isValidator bool       Whether the validator is an infrared validator.\"}},\"numInfraredValidators()\":{\"returns\":{\"_0\":\"num uint256 The number of infrared validators in validator set.\"}},\"protocolFeeAmounts(address)\":{\"params\":{\"token\":\"address The token address for the accumulated fees\"},\"returns\":{\"_0\":\"uint256 The amount of accumulated fees\"}},\"queueBoosts(bytes[],uint128[])\":{\"params\":{\"_amts\":\"uint128[] memory The amount of BGT to boost with.\",\"_pubkeys\":\"bytes[] memory The pubkeys of the validators to queue boosts for.\"}},\"queueDropBoosts(bytes[],uint128[])\":{\"details\":\"Reverts if `user` does not have enough boosted balance to cover amount.\",\"params\":{\"amounts\":\"Amounts of BGT to remove from the queued drop boosts.\",\"pubkeys\":\"bytes[] memory The pubkeys of the validators to remove boost from.\"}},\"queueNewCuttingBoard(bytes,uint64,(address,uint96)[])\":{\"params\":{\"_pubkey\":\"bytes                         The pubkey of the validator to queue the cutting board for\",\"_startBlock\":\"uint64                        The start block for reward weightings\",\"_weights\":\"IBeraChef.Weight[] calldata   The weightings used when distributor calls chef to distribute validator rewards\"}},\"recoverERC20(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of the token to recover\",\"_to\":\"The address to receive the recovered tokens\",\"_token\":\"The address of the token to recover\"}},\"recoverERC20FromVault(address,address,address,uint256)\":{\"params\":{\"_amount\":\"uint256 The amount of the token to recover.\",\"_asset\":\"address The address of the staking asset that the vault is for.\",\"_to\":\"address The address to send the tokens to.\",\"_token\":\"address The address of the token to recover.\"}},\"red()\":{\"returns\":{\"_0\":\"IRED instance of the RED token contract address\"}},\"registerVault(address)\":{\"custom:emits\":\"NewVault with the caller, asset address, and new vault address.\",\"details\":\"Infrared.sol must be admin over MINTER_ROLE on InfraredBGT to grant minter role to deployed vault\",\"params\":{\"_asset\":\"The address of the asset, such as a specific LP token\"},\"returns\":{\"vault\":\"The address of the newly created InfraredVault contract\"}},\"removeValidators(bytes[])\":{\"params\":{\"_pubkeys\":\"bytes[] memory The pubkeys of the validators to remove.\"}},\"replaceValidator(bytes,bytes)\":{\"params\":{\"_current\":\"bytes The pubkey of the validator to replace.\",\"_new\":\"bytes The new validator pubkey.\"}},\"rewardsDuration()\":{\"details\":\"Used as gloabl variabel to set the rewards duration for all new reward tokens on InfraredVaults\",\"returns\":{\"_0\":\"uint256 The reward duration period, in seconds\"}},\"rewardsFactory()\":{\"returns\":{\"_0\":\"IBerachainRewardsVaultFactory instance of the rewards factory contract address\"}},\"setIBGT(address)\":{\"details\":\"Infrared must be granted MINTER_ROLE on IBGT to set the address\",\"params\":{\"_ibgt\":\"The address of the iBGT contract\"}},\"setRed(address)\":{\"details\":\"Infrared must be granted MINTER_ROLE on RED to set the address\",\"params\":{\"_red\":\"The address of the RED contract\"}},\"toggleVault(address)\":{\"details\":\"Only callable by governance, will revert if vault doesn't exist\",\"params\":{\"_asset\":\"The address of the staking asset associated with the vault to pause\"}},\"updateFee(uint8,uint256)\":{\"details\":\"Fee rate in units of 1e6 or hundredths of 1 bip\",\"params\":{\"_fee\":\"uint256 The fee rate to update to\",\"_t\":\"FeeType The fee type\"}},\"updateInfraredBERABribesWeight(uint256)\":{\"params\":{\"_weight\":\"uint256 The weight value\"}},\"updateRedMintRate(uint256)\":{\"params\":{\"_redMintRate\":\"The new mint rate for RED\"}},\"updateRewardsDuration(uint256)\":{\"details\":\"Only callable by governance\",\"params\":{\"_rewardsDuration\":\"The new reward duration period, in seconds\"}},\"updateRewardsDurationForVault(address,address,uint256)\":{\"details\":\"Only callable by governance\",\"params\":{\"_rewardsDuration\":\"The new reward duration period, in seconds\",\"_rewardsToken\":\"The address of the reward token to update the duration for\",\"_stakingToken\":\"The address of the staking asset associated with the vault\"}},\"updateWhiteListedRewardTokens(address,bool)\":{\"params\":{\"_token\":\"The address of the token to whitelist or remove from whitelist\",\"_whitelisted\":\"A boolean indicating if the token should be whitelisted\"}},\"vaultRegistry(address)\":{\"params\":{\"_asset\":\"The address of the staking asset\"},\"returns\":{\"_0\":\"IInfraredVault The vault associated with the asset\"}},\"voter()\":{\"returns\":{\"_0\":\"IVoter instance of the voter contract address\"}},\"wbera()\":{\"returns\":{\"_0\":\"IWBERA The wbera token contract address\"}},\"whitelistedRewardTokens(address)\":{\"params\":{\"_token\":\"The address of the token to check\"},\"returns\":{\"_0\":\"bool True if the token is whitelisted, false otherwise\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ActivatedBoosts(address,bytes[])\":{\"notice\":\"Emitted when an existing boost to a validator is activated.\"},\"BaseHarvested(address,uint256)\":{\"notice\":\"Emitted when base + commission rewards are harvested.\"},\"BribeSupplied(address,address,uint256)\":{\"notice\":\"Emitted when rewards are supplied to a vault.\"},\"BribesCollected(address,address,uint256,uint256)\":{\"notice\":\"Emitted when bribes are harvested then collected by collector.\"},\"CancelDropBoosts(address,bytes[],uint128[])\":{\"notice\":\"Emitted when an user cancels a queued drop boost for a validator.\"},\"CancelledBoosts(address,bytes[],uint128[])\":{\"notice\":\"Emitted when existing queued boosts to validators are cancelled.\"},\"DroppedBoosts(address,bytes[])\":{\"notice\":\"Emitted when sender removes an amount of BGT boost from a validator\"},\"FeeUpdated(address,uint8,uint256,uint256)\":{\"notice\":\"Emitted when protocol fee rate is updated.\"},\"IBGTSet(address,address)\":{\"notice\":\"Emitted when the iBGT token is set.\"},\"InfraredBERABribesWeightUpdated(address,uint256,uint256)\":{\"notice\":\"Emitted when a weight is updated.\"},\"InfraredBGTSupplied(address,uint256,uint256)\":{\"notice\":\"Emitted when InfraredBGT tokens are supplied to a vault.\"},\"InfraredBGTUpdated(address,address,address)\":{\"notice\":\"Emitted when the InfraredBGT token address is updated.\"},\"InfraredBGTVaultUpdated(address,address,address)\":{\"notice\":\"Emitted when the InfraredBGT vault address is updated.\"},\"IredMintRateUpdated(address,uint256,uint256)\":{\"notice\":\"Emitted when the IRED mint rate per unit InfraredBGT is updated.\"},\"NewVault(address,address,address)\":{\"notice\":\"Emitted when a new vault is registered\"},\"OperatorRewardsDistributed(address,address,uint256)\":{\"notice\":\"Emitted when InfraredBGT tokens are supplied to distributor.\"},\"ProtocolFees(address,uint256,uint256)\":{\"notice\":\"Emitted when protocol fees are received.\"},\"ProtocolFeesClaimed(address,address,address,uint256)\":{\"notice\":\"Emitted when protocol fees claimed.\"},\"QueueDropBoosts(address,bytes[],uint128[])\":{\"notice\":\"Emitted when an user queues a drop boost for a validator.\"},\"QueuedBoosts(address,bytes[],uint128[])\":{\"notice\":\"Emitted when BGT tokens are queued for boosts to validators.\"},\"Recovered(address,address,uint256)\":{\"notice\":\"Emitted when tokens are recovered from the contract.\"},\"RedSet(address,address)\":{\"notice\":\"Emitted when the RED token is set.\"},\"Redelegated(address,bytes,bytes,uint256)\":{\"notice\":\"Emitted when tokens are redelegated from one validator to another.\"},\"RewardSupplied(address,address,uint256)\":{\"notice\":\"Emitted when rewards are supplied to a vault.\"},\"RewardTokenNotSupported(address)\":{\"notice\":\"Emitted when a reward token is marked as unsupported.\"},\"RewardsDurationUpdated(address,uint256,uint256)\":{\"notice\":\"Emitted when the rewards duration is updated\"},\"Undelegated(address,bytes,uint256)\":{\"notice\":\"Emitted when tokens are undelegated from a validator.\"},\"ValidatorHarvested(address,bytes,(address,uint256)[],uint256)\":{\"notice\":\"Emitted when a validator harvests its rewards.\"},\"ValidatorReplaced(address,bytes,bytes)\":{\"notice\":\"Emitted when a validator is replaced with a new validator.\"},\"ValidatorsAdded(address,(bytes,address)[])\":{\"notice\":\"Emitted when validators are added.\"},\"ValidatorsRemoved(address,bytes[])\":{\"notice\":\"Emitted when validators are removed from validator set.\"},\"VaultHarvested(address,address,address,uint256)\":{\"notice\":\"Emitted when a vault harvests its rewards.\"},\"VaultRegistrationPauseStatus(bool)\":{\"notice\":\"Emitted when pause status for new vault registration has changed\"},\"WhiteListedRewardTokensUpdated(address,address,bool,bool)\":{\"notice\":\"Emitted when reward tokens are whitelisted or unwhitelisted.\"}},\"kind\":\"user\",\"methods\":{\"activateBoosts(bytes[])\":{\"notice\":\"Activates queued boosts for `_pubkeys`.\"},\"addIncentives(address,address,uint256)\":{\"notice\":\"Adds reward incentives to a specific staking vault\"},\"addReward(address,address,uint256)\":{\"notice\":\"Adds a new reward token to a specific staking vault\"},\"addValidators((bytes,address)[])\":{\"notice\":\"Adds validators to the set of `InfraredValidators`.\"},\"cancelBoosts(bytes[],uint128[])\":{\"notice\":\"Removes `_amts` from previously queued boosts to `_validators`.\"},\"cancelDropBoosts(bytes[],uint128[])\":{\"notice\":\"Cancels a queued drop boost of the validator removing an amount of BGT for sender.\"},\"chef()\":{\"notice\":\"The Berachain chef contract for distributing validator rewards\"},\"claimLostRewardsOnVault(address)\":{\"notice\":\"Claims lost rewards on a specific vault\"},\"claimProtocolFees(address,address,uint256)\":{\"notice\":\"Claims accumulated protocol fees in contract\"},\"collectBribes(address,uint256)\":{\"notice\":\"Collects bribes from bribe collector and distributes to wiBERA and iBGT Infrared vaults._token The payout token for the bribe collector._amount The amount of payout received from bribe collector.\"},\"collector()\":{\"notice\":\"bribe collector contract\"},\"delegateBGT(address)\":{\"notice\":\"Delegates BGT votes to `_delegatee` address.\"},\"distributor()\":{\"notice\":\"Infrared distributor for BGT rewards to validators\"},\"dropBoosts(bytes[])\":{\"notice\":\"Drops an amount of BGT from an existing boost of validators by user.\"},\"fees(uint256)\":{\"notice\":\"Protocol fee rates to charge for various harvest function distributions\"},\"getBGTBalance()\":{\"notice\":\"Gets the BGT balance for this contract\"},\"harvestBase()\":{\"notice\":\"Claims all the BGT base and commission rewards minted to this contract for validators.\"},\"harvestBoostRewards()\":{\"notice\":\"Claims all the BGT staker rewards from boosting validators.\"},\"harvestBribes(address[])\":{\"notice\":\"Claims all the bribes rewards in the contract forwarded from Berachain POL.\"},\"harvestOperatorRewards()\":{\"notice\":\"Credits all accumulated rewards to the operator\"},\"harvestVault(address)\":{\"notice\":\"Claims all the BGT rewards for the vault associated with the given staking token.\"},\"honey()\":{\"notice\":\"Honey ERC20 token\"},\"ibera()\":{\"notice\":\"collects all iBERA realted fees and revenue\"},\"ibgt()\":{\"notice\":\"The InfraredBGT liquid staked token\"},\"ibgtVault()\":{\"notice\":\"The InfraredBGT vault\"},\"infraredValidators()\":{\"notice\":\"Gets the set of infrared validator pubkeys.\"},\"isInfraredValidator(bytes)\":{\"notice\":\"Checks if a validator is an infrared validator.\"},\"numInfraredValidators()\":{\"notice\":\"Gets the number of infrared validators in validator set.\"},\"protocolFeeAmounts(address)\":{\"notice\":\"The unclaimed Infrared protocol fees of token accumulated by contract\"},\"queueBoosts(bytes[],uint128[])\":{\"notice\":\"Queue `_amts` of tokens to `_validators` for boosts.\"},\"queueDropBoosts(bytes[],uint128[])\":{\"notice\":\"Queues a drop boost of the validators removing an amount of BGT for sender.\"},\"queueNewCuttingBoard(bytes,uint64,(address,uint96)[])\":{\"notice\":\"Queues a new cutting board on BeraChef for reward weight distribution for validator\"},\"recoverERC20(address,address,uint256)\":{\"notice\":\"Recovers ERC20 tokens sent accidentally to the contract\"},\"recoverERC20FromVault(address,address,address,uint256)\":{\"notice\":\"Recover ERC20 tokens from a vault.\"},\"red()\":{\"notice\":\"The RED token\"},\"registerVault(address)\":{\"notice\":\"Registers a new vault for a given asset\"},\"removeValidators(bytes[])\":{\"notice\":\"Removes validators from the set of `InfraredValidators`.\"},\"replaceValidator(bytes,bytes)\":{\"notice\":\"Replaces a validator in the set of `InfraredValidators`.\"},\"rewardsDuration()\":{\"notice\":\"The rewards duration\"},\"rewardsFactory()\":{\"notice\":\"The Berachain rewards vault factory address\"},\"setIBGT(address)\":{\"notice\":\"Sets the address of the iBGT contract\"},\"setRed(address)\":{\"notice\":\"Sets the address of the RED contract\"},\"toggleVault(address)\":{\"notice\":\"Pauses staking functionality on a specific vault\"},\"updateFee(uint8,uint256)\":{\"notice\":\"Updates the fee rate charged on different harvest functionsPlease harvest all assosiated rewards for a given type before updating\"},\"updateInfraredBERABribesWeight(uint256)\":{\"notice\":\"Updates the weight for iBERA bribes\"},\"updateRedMintRate(uint256)\":{\"notice\":\"Updates the mint rate for RED\"},\"updateRewardsDuration(uint256)\":{\"notice\":\"Sets the new duration for reward distributions in InfraredVaults\"},\"updateRewardsDurationForVault(address,address,uint256)\":{\"notice\":\"Updates the rewards duration for a specific reward token on a specific vault\"},\"updateWhiteListedRewardTokens(address,bool)\":{\"notice\":\"Updates the whitelist status of a reward token\"},\"vaultRegistry(address)\":{\"notice\":\"Returns the infrared vault address for a given staking token\"},\"voter()\":{\"notice\":\"IRED voter\"},\"wbera()\":{\"notice\":\"Wrapped bera\"},\"whitelistedRewardTokens(address)\":{\"notice\":\"Checks if a token is a whitelisted reward token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IInfrared.sol\":\"IInfrared\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[\":@berachain/=lib/contracts-monorepo/src/\",\":@forge-std/=lib/forge-std/src/\",\":@mock/=lib/contracts-monorepo/test/mock/\",\":@openzeppelin-gov-ext/=lib/contracts-monorepo/node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/\",\":@openzeppelin-gov/=lib/contracts-monorepo/node_modules/@openzeppelin/contracts-upgradeable/governance/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/=lib/prb-test/src/\",\":@prb/math/=lib/contracts-monorepo/node_modules/@prb/math/\",\":@pythnetwork/=lib/contracts-monorepo/node_modules/@pythnetwork/pyth-sdk-solidity/\",\":@solmate/=lib/solmate/src/\",\":contracts-monorepo/=lib/contracts-monorepo/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":prb-math/=lib/prb-math/src/\",\":prb-test/=lib/prb-test/src/\",\":solady/src/=lib/solady/src/\",\":solady/test/=lib/solady/test/\",\":solmate/=lib/solmate/src/\",\":transient-goodies/=lib/contracts-monorepo/lib/transient-goodies/src/\"]},\"sources\":{\"lib/contracts-monorepo/src/base/IStakingRewards.sol\":{\"keccak256\":\"0xbc9c5e63529aa547da9056deea1eb3d3275be79cb03ec141eb1488045b9f06dc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8d0196a4ecda33cdeab2145e7f7ab832dae8c2e882b300edb2b75ce5c99d02d6\",\"dweb:/ipfs/Qmeuu7U3qWV6WqjACrjso5hgYaVtKyDwc867rgZm56Agbo\"]},\"lib/contracts-monorepo/src/base/IStakingRewardsErrors.sol\":{\"keccak256\":\"0xb6f2b90f37ef86721c2fffcc7ab9ef3cbe7857a9cae03aeab4a902e3d192b5a3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://71f9c77e85e6d5c8447663edd4078cecde127679c49befd0b4f8d8b675f3ea0b\",\"dweb:/ipfs/QmY9g48MGDfFYLtdA8NgEC8dHvnLZGb33wbuQL8pXXqZxp\"]},\"lib/contracts-monorepo/src/pol/interfaces/IBeraChef.sol\":{\"keccak256\":\"0x4c7aad6011b6d8281dddcb39a60dcd6e746494204cb1058c6244981fe7c7c320\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://247d94f47542636be74396c6087e37a2721758e5f63a6f116cb77686f3c908bf\",\"dweb:/ipfs/QmZsDhd9hc6zqwwjZmdwrJq8HbBTFVrAey5cjsyNvPuPQY\"]},\"lib/contracts-monorepo/src/pol/interfaces/IPOLErrors.sol\":{\"keccak256\":\"0x0c1f5649b97aab159d3a9bf63295ce36803b2f3b4febe2fbe12edcbc524e2e43\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://24756391ec06a77aa0645b929c80e0e9f98d185ab0fabdc4964ad7117371a08a\",\"dweb:/ipfs/QmVwvweGzmrQKYuVHZwC13mrfZwaEQFr6nCh5J5J2fM3bv\"]},\"lib/contracts-monorepo/src/pol/interfaces/IRewardVault.sol\":{\"keccak256\":\"0x715034f3ce499510dd02d31ae8a9363d9e29cad564bd60a7c227498af9c5ee69\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://99ace33a1d80ad6ed6253190a630f9dd6e194e0e811e54f024ac3b760ce6a658\",\"dweb:/ipfs/QmQxRtJzPrazFdBCeruxqbfiQhi3QhAmm3kTEnoHZA4pv1\"]},\"lib/contracts-monorepo/src/pol/interfaces/IRewardVaultFactory.sol\":{\"keccak256\":\"0xa597489d77b8b02dbe22ac2539458d6b8129318cb501fda2dea54f9a94dbd16c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://be9558a38ce9a59c6872cb97b86ff5f0227a9466ed12f266df0e7151b0d44348\",\"dweb:/ipfs/QmbxW6Zc1zQDtJa1BNYwGRnLT8QiUy7xuaz92so4udw7Ej\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts/contracts/access/extensions/AccessControlEnumerable.sol\":{\"keccak256\":\"0xb1c906fcd870fc8dfedb63bfb1bc58b4d2a7469bc13cc44d996fda430693850a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd98c7779af61b220166cf952a05f6aca82ec859744d407d29043f8100adfb9c\",\"dweb:/ipfs/Qmd6ftRk6cJgdooybM6F1X26R4SSUeNksv6Gni2NwEnKDw\"]},\"lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"src/core/InfraredBGT.sol\":{\"keccak256\":\"0x49d1db6bc4c39a09ae2349891af5c4a6cba16160cd80b60fa884fe4f2015bb49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1340bb7f2faa97208c8d28b05d9172fbcea7d80f07b9d0f20a48f1b0fc1c53d5\",\"dweb:/ipfs/Qmb15wpM3zTwUFFeifjBmgqX4PhpnREoRCwBUPHWnJUEbX\"]},\"src/core/libraries/ConfigTypes.sol\":{\"keccak256\":\"0x68754d1b88583bf2295e6d63ecb1738af8b68f48db872ef727732ceb1e95f6b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://786af3f9fc02db012cdfeb1911412d5f9752ace6eafe3d7b14214521da6eb8b2\",\"dweb:/ipfs/Qmbr9yz8iEEFVDvEktHnLc6iHqZxH1Wa5jCWYucVoeKuJ6\"]},\"src/core/libraries/ValidatorTypes.sol\":{\"keccak256\":\"0x5bd97036692d65ce076d4020f22d4040222da99c97c3d4bec2b308153cefccd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86e9934fee680c5245284108a3b6176f30089e4953983e2524899767c26684b2\",\"dweb:/ipfs/QmazMMBwrg1G7VrAX1q1myFh6e2NhhmRcaFFcPPkicNMkR\"]},\"src/interfaces/IBribeCollector.sol\":{\"keccak256\":\"0x775219d3f5143f605a20f099c3b9b918d680fbe85a1aa45e11620a8ef4acfa37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b91538563a05849da64f68ff2f743fbea34aa466c4c5e81aeef11e4dd5e2b72\",\"dweb:/ipfs/QmSDCUiJnqJggBKTmerQQK3mVKYTDEdY5FFpVqXx6TCPCu\"]},\"src/interfaces/IERC20Mintable.sol\":{\"keccak256\":\"0x3edbe078fdf111e9eac829bab8bcb270773d82589a06c9a8d18d78209012823a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09e40d0db6f4224b1a4a6f1b4a10b82a1a6714e2af8e20cf743f4fe3f0ec4f20\",\"dweb:/ipfs/QmX7N2F8AYkkCLCUkjnMegso38waS3kLAAhhxqM5KRMYKQ\"]},\"src/interfaces/IInfrared.sol\":{\"keccak256\":\"0xa858f2b5943bb4ac83c6b2e240d07fcf50500142913ad8b409b7461e423f7de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://422a6eed36a8d6fb04bd8a441d5c67475b7e4eefbbad0c2a69234d9cede769f5\",\"dweb:/ipfs/QmeKtZyxV45hMvyjjX54StWDuW6g3gXVjMpspq6c6khbKR\"]},\"src/interfaces/IInfraredBERA.sol\":{\"keccak256\":\"0xa8bc1b3e5422f421ee80f7cb71485136ec18775e49592d6f9c5d25f8c184e84f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18ca64826f069af3d900176a8b3fa830da781710aea00509898eae543373bc2c\",\"dweb:/ipfs/QmfDF5yY2DWpBosL8fcMBfVMmgNKWJnHUsSBYpGdgoiVa5\"]},\"src/interfaces/IInfraredDistributor.sol\":{\"keccak256\":\"0xf82b851723ca5ba24a514f147c5a6cfc9b3b27771a2d253a89f86b29ee531106\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d8f8fa24a0456ed2905ef14519d9dbabcd6272107b3591ffacf8655de085eee\",\"dweb:/ipfs/QmXCC9AKX9hkyhnbMC6mMfuq3fX2QF2TK3opXaw7AhrfpQ\"]},\"src/interfaces/IInfraredVault.sol\":{\"keccak256\":\"0x2534b9957d782bec24f481872fef2f0476253c9cfd2bcb1757175ef2e5841541\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2743ce987d37cdbd598471ed394bf6c71e2d2c78b106eb19531d2307da7d8c9c\",\"dweb:/ipfs/QmX91MJMpRSm4aKb6uXM3uNU3h6LiEQ8EG64YVDrtk4zvH\"]},\"src/interfaces/IMultiRewards.sol\":{\"keccak256\":\"0x858dd5133276e6fe9911d25604666814c68d9ca1438d9afb75ea449daa2346f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d59995c58de7d32a036cd4e7adcb8cd0425136d3a52d19fa6b67f156e74c625\",\"dweb:/ipfs/QmZZQq2K2BCmvaCKUZaREtfz3GDKBoxRmTeeicdDtiHJ5E\"]},\"src/interfaces/IRED.sol\":{\"keccak256\":\"0xa80641227053167340a8e396fb7c32bd262e42954e1325c5f394d83ea6ea7b65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5beea0c8d542b545b61cf39903c7101f336280f870884cf63fd60dbfa8e78de3\",\"dweb:/ipfs/QmQZdbug4TrnbcqRy1NrxNTUVJs9MamSpwrumRELKjDgVd\"]},\"src/interfaces/IWBERA.sol\":{\"keccak256\":\"0x536355622f1af21408b6375d455cba352cad371d26a59c43bf01d1c1608afbb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d9a5a01e9a24e9f3f30bd29daf0689978175e1b47b4d3989b657cb5b882d4f4\",\"dweb:/ipfs/QmRNzKBtA4ng4YSYj3zJtU7qScVeuiiHSx8E67vkFZULCu\"]},\"src/utils/DataTypes.sol\":{\"keccak256\":\"0x7c7a315cc178b463e5d34721b149ea2484ab1d164afab367f2128dd9a91406ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://290d49a7bd283a66196cc53cd732d7407a7454e9e14ebe1caa7b2d1c6cac8d19\",\"dweb:/ipfs/QmU4SMTAfPxVaM2WM4cWthmTiaYSfpzbH19KJa7xLxRGY3\"]},\"src/vendors/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x045bb45cd32c44fdc32d11dcf7c5bae128d94d45de9f923cfeb7adfb90954a82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f59d85eef1006509ed864c672060776f47b27fcc91f28a1204e29612006131f\",\"dweb:/ipfs/QmSvCJ7VQHqBTLGaTi6JxmG33eFqG4AsDoisXQMmeeA8ft\"]},\"src/voting/interfaces/IVoter.sol\":{\"keccak256\":\"0x4cf4d3c2b8d614bf048ddaec3c98de5e549a929b2a8817168acc522efdb0d167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://165e8e01c986ac2990f774b324b1da60d97cdc07cc3f6e1e2b3bd33b35709d54\",\"dweb:/ipfs/QmbJDoBdQjQvwc5gnDwckQBEv5Tc5LcDaumjDJvey33x7f\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"bytes[]","name":"_pubkeys","type":"bytes[]","indexed":false}],"type":"event","name":"ActivatedBoosts","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"uint256","name":"_bgtAmt","type":"uint256","indexed":false}],"type":"event","name":"BaseHarvested","anonymous":false},{"inputs":[{"internalType":"address","name":"_recipient","type":"address","indexed":true},{"internalType":"address","name":"_token","type":"address","indexed":true},{"internalType":"uint256","name":"_amt","type":"uint256","indexed":false}],"type":"event","name":"BribeSupplied","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"address","name":"_token","type":"address","indexed":false},{"internalType":"uint256","name":"_amtWiberaVault","type":"uint256","indexed":false},{"internalType":"uint256","name":"_amtIbgtVault","type":"uint256","indexed":false}],"type":"event","name":"BribesCollected","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"bytes[]","name":"pubkeys","type":"bytes[]","indexed":true},{"internalType":"uint128[]","name":"amounts","type":"uint128[]","indexed":false}],"type":"event","name":"CancelDropBoosts","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"bytes[]","name":"_pubkeys","type":"bytes[]","indexed":false},{"internalType":"uint128[]","name":"_amts","type":"uint128[]","indexed":false}],"type":"event","name":"CancelledBoosts","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":true},{"internalType":"bytes[]","name":"_pubkeys","type":"bytes[]","indexed":false}],"type":"event","name":"DroppedBoosts","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"enum ConfigTypes.FeeType","name":"_feeType","type":"uint8","indexed":false},{"internalType":"uint256","name":"_oldFeeRate","type":"uint256","indexed":false},{"internalType":"uint256","name":"_newFeeRate","type":"uint256","indexed":false}],"type":"event","name":"FeeUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"address","name":"_ibgt","type":"address","indexed":false}],"type":"event","name":"IBGTSet","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"uint256","name":"_oldWeight","type":"uint256","indexed":false},{"internalType":"uint256","name":"_newWeight","type":"uint256","indexed":false}],"type":"event","name":"InfraredBERABribesWeightUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"_vault","type":"address","indexed":true},{"internalType":"uint256","name":"_ibgtAmt","type":"uint256","indexed":false},{"internalType":"uint256","name":"_iredAmt","type":"uint256","indexed":false}],"type":"event","name":"InfraredBGTSupplied","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"address","name":"_oldIbgt","type":"address","indexed":false},{"internalType":"address","name":"_newIbgt","type":"address","indexed":false}],"type":"event","name":"InfraredBGTUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"address","name":"_oldIbgtVault","type":"address","indexed":false},{"internalType":"address","name":"_newIbgtVault","type":"address","indexed":false}],"type":"event","name":"InfraredBGTVaultUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"uint256","name":"_oldMintRate","type":"uint256","indexed":false},{"internalType":"uint256","name":"_newMintRate","type":"uint256","indexed":false}],"type":"event","name":"IredMintRateUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"address","name":"_asset","type":"address","indexed":true},{"internalType":"address","name":"_vault","type":"address","indexed":true}],"type":"event","name":"NewVault","anonymous":false},{"inputs":[{"internalType":"address","name":"_ibera","type":"address","indexed":true},{"internalType":"address","name":"_distributor","type":"address","indexed":true},{"internalType":"uint256","name":"_amt","type":"uint256","indexed":false}],"type":"event","name":"OperatorRewardsDistributed","anonymous":false},{"inputs":[{"internalType":"address","name":"_token","type":"address","indexed":true},{"internalType":"uint256","name":"_amt","type":"uint256","indexed":false},{"internalType":"uint256","name":"_voterAmt","type":"uint256","indexed":false}],"type":"event","name":"ProtocolFees","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"address","name":"_to","type":"address","indexed":false},{"internalType":"address","name":"_token","type":"address","indexed":false},{"internalType":"uint256","name":"_amount","type":"uint256","indexed":false}],"type":"event","name":"ProtocolFeesClaimed","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"bytes[]","name":"pubkeys","type":"bytes[]","indexed":true},{"internalType":"uint128[]","name":"amounts","type":"uint128[]","indexed":false}],"type":"event","name":"QueueDropBoosts","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"bytes[]","name":"_pubkeys","type":"bytes[]","indexed":false},{"internalType":"uint128[]","name":"_amts","type":"uint128[]","indexed":false}],"type":"event","name":"QueuedBoosts","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"address","name":"_token","type":"address","indexed":true},{"internalType":"uint256","name":"_amount","type":"uint256","indexed":false}],"type":"event","name":"Recovered","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"address","name":"_red","type":"address","indexed":false}],"type":"event","name":"RedSet","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"bytes","name":"_from","type":"bytes","indexed":false},{"internalType":"bytes","name":"_to","type":"bytes","indexed":false},{"internalType":"uint256","name":"_amt","type":"uint256","indexed":false}],"type":"event","name":"Redelegated","anonymous":false},{"inputs":[{"internalType":"address","name":"_vault","type":"address","indexed":true},{"internalType":"address","name":"_token","type":"address","indexed":true},{"internalType":"uint256","name":"_amt","type":"uint256","indexed":false}],"type":"event","name":"RewardSupplied","anonymous":false},{"inputs":[{"internalType":"address","name":"_token","type":"address","indexed":false}],"type":"event","name":"RewardTokenNotSupported","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"uint256","name":"_oldDuration","type":"uint256","indexed":false},{"internalType":"uint256","name":"_newDuration","type":"uint256","indexed":false}],"type":"event","name":"RewardsDurationUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"bytes","name":"_pubkey","type":"bytes","indexed":false},{"internalType":"uint256","name":"_amt","type":"uint256","indexed":false}],"type":"event","name":"Undelegated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"oldMintRate","type":"uint256","indexed":false},{"internalType":"uint256","name":"newMintRate","type":"uint256","indexed":false},{"internalType":"address","name":"sender","type":"address","indexed":false}],"type":"event","name":"UpdatedRedMintRate","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"bytes","name":"_validator","type":"bytes","indexed":true},{"internalType":"struct DataTypes.Token[]","name":"_rewards","type":"tuple[]","components":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"indexed":false},{"internalType":"uint256","name":"_bgtAmt","type":"uint256","indexed":false}],"type":"event","name":"ValidatorHarvested","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"bytes","name":"_current","type":"bytes","indexed":false},{"internalType":"bytes","name":"_new","type":"bytes","indexed":false}],"type":"event","name":"ValidatorReplaced","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"struct ValidatorTypes.Validator[]","name":"_validators","type":"tuple[]","components":[{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"address","name":"addr","type":"address"}],"indexed":false}],"type":"event","name":"ValidatorsAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"bytes[]","name":"_pubkeys","type":"bytes[]","indexed":false}],"type":"event","name":"ValidatorsRemoved","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"address","name":"_asset","type":"address","indexed":true},{"internalType":"address","name":"_vault","type":"address","indexed":true},{"internalType":"uint256","name":"_bgtAmt","type":"uint256","indexed":false}],"type":"event","name":"VaultHarvested","anonymous":false},{"inputs":[{"internalType":"bool","name":"pause","type":"bool","indexed":false}],"type":"event","name":"VaultRegistrationPauseStatus","anonymous":false},{"inputs":[{"internalType":"address","name":"_sender","type":"address","indexed":false},{"internalType":"address","name":"_token","type":"address","indexed":true},{"internalType":"bool","name":"_wasWhitelisted","type":"bool","indexed":false},{"internalType":"bool","name":"_isWhitelisted","type":"bool","indexed":false}],"type":"event","name":"WhiteListedRewardTokensUpdated","anonymous":false},{"inputs":[{"internalType":"bytes[]","name":"_pubkeys","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"activateBoosts"},{"inputs":[{"internalType":"address","name":"_stakingToken","type":"address"},{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addIncentives"},{"inputs":[{"internalType":"address","name":"_stakingToken","type":"address"},{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"uint256","name":"_rewardsDuration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addReward"},{"inputs":[{"internalType":"struct ValidatorTypes.Validator[]","name":"_validators","type":"tuple[]","components":[{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"address","name":"addr","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"addValidators"},{"inputs":[{"internalType":"bytes[]","name":"_pubkeys","type":"bytes[]"},{"internalType":"uint128[]","name":"_amts","type":"uint128[]"}],"stateMutability":"nonpayable","type":"function","name":"cancelBoosts"},{"inputs":[{"internalType":"bytes[]","name":"pubkeys","type":"bytes[]"},{"internalType":"uint128[]","name":"amounts","type":"uint128[]"}],"stateMutability":"nonpayable","type":"function","name":"cancelDropBoosts"},{"inputs":[],"stateMutability":"view","type":"function","name":"chef","outputs":[{"internalType":"contract IBeraChef","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_asset","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"claimLostRewardsOnVault"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"claimProtocolFees"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"collectBribes"},{"inputs":[],"stateMutability":"view","type":"function","name":"collector","outputs":[{"internalType":"contract IBribeCollector","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_delegatee","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"delegateBGT"},{"inputs":[],"stateMutability":"view","type":"function","name":"distributor","outputs":[{"internalType":"contract IInfraredDistributor","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes[]","name":"pubkeys","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"dropBoosts"},{"inputs":[{"internalType":"uint256","name":"i","type":"uint256"}],"stateMutability":"view","type":"function","name":"fees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBGTBalance","outputs":[{"internalType":"uint256","name":"bgtBalance","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"harvestBase"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"harvestBoostRewards"},{"inputs":[{"internalType":"address[]","name":"_tokens","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"harvestBribes"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"harvestOperatorRewards"},{"inputs":[{"internalType":"address","name":"_asset","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"harvestVault"},{"inputs":[],"stateMutability":"view","type":"function","name":"honey","outputs":[{"internalType":"contract ERC20","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"ibera","outputs":[{"internalType":"contract IInfraredBERA","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"ibgt","outputs":[{"internalType":"contract InfraredBGT","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"ibgtVault","outputs":[{"internalType":"contract IInfraredVault","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"infraredValidators","outputs":[{"internalType":"struct ValidatorTypes.Validator[]","name":"validators","type":"tuple[]","components":[{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"address","name":"addr","type":"address"}]}]},{"inputs":[{"internalType":"bytes","name":"_pubkey","type":"bytes"}],"stateMutability":"view","type":"function","name":"isInfraredValidator","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"numInfraredValidators","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"protocolFeeAmounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes[]","name":"_pubkeys","type":"bytes[]"},{"internalType":"uint128[]","name":"_amts","type":"uint128[]"}],"stateMutability":"nonpayable","type":"function","name":"queueBoosts"},{"inputs":[{"internalType":"bytes[]","name":"pubkeys","type":"bytes[]"},{"internalType":"uint128[]","name":"amounts","type":"uint128[]"}],"stateMutability":"nonpayable","type":"function","name":"queueDropBoosts"},{"inputs":[{"internalType":"bytes","name":"_pubkey","type":"bytes"},{"internalType":"uint64","name":"_startBlock","type":"uint64"},{"internalType":"struct IBeraChef.Weight[]","name":"_weights","type":"tuple[]","components":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"percentageNumerator","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"queueNewCuttingBoard"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"recoverERC20"},{"inputs":[{"internalType":"address","name":"_asset","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"recoverERC20FromVault"},{"inputs":[],"stateMutability":"view","type":"function","name":"red","outputs":[{"internalType":"contract IRED","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_asset","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"registerVault","outputs":[{"internalType":"contract IInfraredVault","name":"vault","type":"address"}]},{"inputs":[{"internalType":"bytes[]","name":"_pubkeys","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"removeValidators"},{"inputs":[{"internalType":"bytes","name":"_current","type":"bytes"},{"internalType":"bytes","name":"_new","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"replaceValidator"},{"inputs":[],"stateMutability":"view","type":"function","name":"rewardsDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rewardsFactory","outputs":[{"internalType":"contract IRewardVaultFactory","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_ibgt","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setIBGT"},{"inputs":[{"internalType":"address","name":"_red","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setRed"},{"inputs":[{"internalType":"address","name":"_asset","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"toggleVault"},{"inputs":[{"internalType":"enum ConfigTypes.FeeType","name":"_t","type":"uint8"},{"internalType":"uint256","name":"_fee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateFee"},{"inputs":[{"internalType":"uint256","name":"_weight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateInfraredBERABribesWeight"},{"inputs":[{"internalType":"uint256","name":"_redMintRate","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateRedMintRate"},{"inputs":[{"internalType":"uint256","name":"_rewardsDuration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateRewardsDuration"},{"inputs":[{"internalType":"address","name":"_stakingToken","type":"address"},{"internalType":"address","name":"_rewardsToken","type":"address"},{"internalType":"uint256","name":"_rewardsDuration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateRewardsDurationForVault"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"bool","name":"_whitelisted","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"updateWhiteListedRewardTokens"},{"inputs":[{"internalType":"address","name":"_asset","type":"address"}],"stateMutability":"view","type":"function","name":"vaultRegistry","outputs":[{"internalType":"contract IInfraredVault","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"voter","outputs":[{"internalType":"contract IVoter","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"wbera","outputs":[{"internalType":"contract IWBERA","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"stateMutability":"view","type":"function","name":"whitelistedRewardTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"activateBoosts(bytes[])":{"params":{"_pubkeys":"bytes[] memory The pubkeys of the validators to activate boosts for."}},"addIncentives(address,address,uint256)":{"custom:access":"Callable when contract is initialized","custom:error":"ZeroAmount if _amount is 0NoRewardsVault if vault doesn't exist for _stakingTokenRewardTokenNotWhitelisted if reward token hasn't been configured for the vault","custom:security":"Requires caller to have approved this contract to spend _rewardsToken","details":"Transfers reward tokens from caller to this contract, then notifies vault of new rewards","params":{"_amount":"The amount of reward tokens to add as incentives","_rewardsToken":"The address of the token being added as incentives","_stakingToken":"The address of the staking token associated with the vault"}},"addReward(address,address,uint256)":{"custom:error":"ZeroAmount if _rewardsDuration is 0RewardTokenNotWhitelisted if _rewardsToken is not whitelistedNoRewardsVault if vault doesn't exist for _stakingToken","details":"Only callable by governance when contract is initialized","params":{"_rewardsDuration":"The duration period for the rewards distribution, in seconds","_rewardsToken":"The address of the token to be added as a reward","_stakingToken":"The address of the staking token associated with the vault"}},"addValidators((bytes,address)[])":{"params":{"_validators":"Validator[] memory The validators to add."}},"cancelBoosts(bytes[],uint128[])":{"details":"`_pubkeys` need not be in the current validator set in case just removed but need to cancel.","params":{"_amts":"uint128[] memory The amounts of BGT to remove from the queued boosts.","_pubkeys":"bytes[] memory The pubkeys of the validators to remove boosts for."}},"cancelDropBoosts(bytes[],uint128[])":{"params":{"amounts":"Amounts of BGT to remove from the queued drop boosts.","pubkeys":"bytes[] memory The pubkeys of the validators to remove boost from."}},"chef()":{"returns":{"_0":"IBeraChef instance of the BeraChef contract address"}},"claimLostRewardsOnVault(address)":{"details":"Only callable by governance, will revert if vault doesn't exist","params":{"_asset":"The address of the staking asset associated with the vault to claim lost rewards on"}},"claimProtocolFees(address,address,uint256)":{"params":{"_amount":"uint256 The amount of accumulated fees to claim","_to":"address The recipient of the fees","_token":"address The token to claim fees in"}},"collector()":{"returns":{"_0":"IBribeCollector The bribe collector contract address"}},"delegateBGT(address)":{"params":{"_delegatee":"address The address to delegate votes to"}},"distributor()":{"returns":{"_0":"IInfraredDistributor instance of the distributor contract address"}},"dropBoosts(bytes[])":{"params":{"pubkeys":"bytes[] memory The pubkeys of the validators to remove boost from."}},"fees(uint256)":{"params":{"i":"The index of the fee rate"},"returns":{"_0":"uint256 The fee rate"}},"getBGTBalance()":{"returns":{"bgtBalance":"The BGT balance held by this address"}},"harvestBoostRewards()":{"details":"Sends rewards to iBGT vault."},"harvestBribes(address[])":{"params":{"_tokens":"address[] memory The addresses of the tokens to harvest in the contract."}},"harvestVault(address)":{"params":{"_asset":"address The address of the staking asset that the vault is for."}},"honey()":{"returns":{"_0":"ERC20 The honey token contract address"}},"ibera()":{"returns":{"_0":"returns IInfraredBERAFeeReceivor instanace of iBeraFeeReceivor"}},"ibgt()":{"returns":{"_0":"IInfraredBGT The InfraredBGT token contract address"}},"ibgtVault()":{"returns":{"_0":"IInfraredVault instance of the iBGT vault contract address"}},"infraredValidators()":{"returns":{"validators":"Validator[] memory The set of infrared validators."}},"isInfraredValidator(bytes)":{"params":{"_pubkey":"bytes      The pubkey of the validator to check."},"returns":{"_0":"_isValidator bool       Whether the validator is an infrared validator."}},"numInfraredValidators()":{"returns":{"_0":"num uint256 The number of infrared validators in validator set."}},"protocolFeeAmounts(address)":{"params":{"token":"address The token address for the accumulated fees"},"returns":{"_0":"uint256 The amount of accumulated fees"}},"queueBoosts(bytes[],uint128[])":{"params":{"_amts":"uint128[] memory The amount of BGT to boost with.","_pubkeys":"bytes[] memory The pubkeys of the validators to queue boosts for."}},"queueDropBoosts(bytes[],uint128[])":{"details":"Reverts if `user` does not have enough boosted balance to cover amount.","params":{"amounts":"Amounts of BGT to remove from the queued drop boosts.","pubkeys":"bytes[] memory The pubkeys of the validators to remove boost from."}},"queueNewCuttingBoard(bytes,uint64,(address,uint96)[])":{"params":{"_pubkey":"bytes                         The pubkey of the validator to queue the cutting board for","_startBlock":"uint64                        The start block for reward weightings","_weights":"IBeraChef.Weight[] calldata   The weightings used when distributor calls chef to distribute validator rewards"}},"recoverERC20(address,address,uint256)":{"params":{"_amount":"The amount of the token to recover","_to":"The address to receive the recovered tokens","_token":"The address of the token to recover"}},"recoverERC20FromVault(address,address,address,uint256)":{"params":{"_amount":"uint256 The amount of the token to recover.","_asset":"address The address of the staking asset that the vault is for.","_to":"address The address to send the tokens to.","_token":"address The address of the token to recover."}},"red()":{"returns":{"_0":"IRED instance of the RED token contract address"}},"registerVault(address)":{"custom:emits":"NewVault with the caller, asset address, and new vault address.","details":"Infrared.sol must be admin over MINTER_ROLE on InfraredBGT to grant minter role to deployed vault","params":{"_asset":"The address of the asset, such as a specific LP token"},"returns":{"vault":"The address of the newly created InfraredVault contract"}},"removeValidators(bytes[])":{"params":{"_pubkeys":"bytes[] memory The pubkeys of the validators to remove."}},"replaceValidator(bytes,bytes)":{"params":{"_current":"bytes The pubkey of the validator to replace.","_new":"bytes The new validator pubkey."}},"rewardsDuration()":{"details":"Used as gloabl variabel to set the rewards duration for all new reward tokens on InfraredVaults","returns":{"_0":"uint256 The reward duration period, in seconds"}},"rewardsFactory()":{"returns":{"_0":"IBerachainRewardsVaultFactory instance of the rewards factory contract address"}},"setIBGT(address)":{"details":"Infrared must be granted MINTER_ROLE on IBGT to set the address","params":{"_ibgt":"The address of the iBGT contract"}},"setRed(address)":{"details":"Infrared must be granted MINTER_ROLE on RED to set the address","params":{"_red":"The address of the RED contract"}},"toggleVault(address)":{"details":"Only callable by governance, will revert if vault doesn't exist","params":{"_asset":"The address of the staking asset associated with the vault to pause"}},"updateFee(uint8,uint256)":{"details":"Fee rate in units of 1e6 or hundredths of 1 bip","params":{"_fee":"uint256 The fee rate to update to","_t":"FeeType The fee type"}},"updateInfraredBERABribesWeight(uint256)":{"params":{"_weight":"uint256 The weight value"}},"updateRedMintRate(uint256)":{"params":{"_redMintRate":"The new mint rate for RED"}},"updateRewardsDuration(uint256)":{"details":"Only callable by governance","params":{"_rewardsDuration":"The new reward duration period, in seconds"}},"updateRewardsDurationForVault(address,address,uint256)":{"details":"Only callable by governance","params":{"_rewardsDuration":"The new reward duration period, in seconds","_rewardsToken":"The address of the reward token to update the duration for","_stakingToken":"The address of the staking asset associated with the vault"}},"updateWhiteListedRewardTokens(address,bool)":{"params":{"_token":"The address of the token to whitelist or remove from whitelist","_whitelisted":"A boolean indicating if the token should be whitelisted"}},"vaultRegistry(address)":{"params":{"_asset":"The address of the staking asset"},"returns":{"_0":"IInfraredVault The vault associated with the asset"}},"voter()":{"returns":{"_0":"IVoter instance of the voter contract address"}},"wbera()":{"returns":{"_0":"IWBERA The wbera token contract address"}},"whitelistedRewardTokens(address)":{"params":{"_token":"The address of the token to check"},"returns":{"_0":"bool True if the token is whitelisted, false otherwise"}}},"version":1},"userdoc":{"kind":"user","methods":{"activateBoosts(bytes[])":{"notice":"Activates queued boosts for `_pubkeys`."},"addIncentives(address,address,uint256)":{"notice":"Adds reward incentives to a specific staking vault"},"addReward(address,address,uint256)":{"notice":"Adds a new reward token to a specific staking vault"},"addValidators((bytes,address)[])":{"notice":"Adds validators to the set of `InfraredValidators`."},"cancelBoosts(bytes[],uint128[])":{"notice":"Removes `_amts` from previously queued boosts to `_validators`."},"cancelDropBoosts(bytes[],uint128[])":{"notice":"Cancels a queued drop boost of the validator removing an amount of BGT for sender."},"chef()":{"notice":"The Berachain chef contract for distributing validator rewards"},"claimLostRewardsOnVault(address)":{"notice":"Claims lost rewards on a specific vault"},"claimProtocolFees(address,address,uint256)":{"notice":"Claims accumulated protocol fees in contract"},"collectBribes(address,uint256)":{"notice":"Collects bribes from bribe collector and distributes to wiBERA and iBGT Infrared vaults._token The payout token for the bribe collector._amount The amount of payout received from bribe collector."},"collector()":{"notice":"bribe collector contract"},"delegateBGT(address)":{"notice":"Delegates BGT votes to `_delegatee` address."},"distributor()":{"notice":"Infrared distributor for BGT rewards to validators"},"dropBoosts(bytes[])":{"notice":"Drops an amount of BGT from an existing boost of validators by user."},"fees(uint256)":{"notice":"Protocol fee rates to charge for various harvest function distributions"},"getBGTBalance()":{"notice":"Gets the BGT balance for this contract"},"harvestBase()":{"notice":"Claims all the BGT base and commission rewards minted to this contract for validators."},"harvestBoostRewards()":{"notice":"Claims all the BGT staker rewards from boosting validators."},"harvestBribes(address[])":{"notice":"Claims all the bribes rewards in the contract forwarded from Berachain POL."},"harvestOperatorRewards()":{"notice":"Credits all accumulated rewards to the operator"},"harvestVault(address)":{"notice":"Claims all the BGT rewards for the vault associated with the given staking token."},"honey()":{"notice":"Honey ERC20 token"},"ibera()":{"notice":"collects all iBERA realted fees and revenue"},"ibgt()":{"notice":"The InfraredBGT liquid staked token"},"ibgtVault()":{"notice":"The InfraredBGT vault"},"infraredValidators()":{"notice":"Gets the set of infrared validator pubkeys."},"isInfraredValidator(bytes)":{"notice":"Checks if a validator is an infrared validator."},"numInfraredValidators()":{"notice":"Gets the number of infrared validators in validator set."},"protocolFeeAmounts(address)":{"notice":"The unclaimed Infrared protocol fees of token accumulated by contract"},"queueBoosts(bytes[],uint128[])":{"notice":"Queue `_amts` of tokens to `_validators` for boosts."},"queueDropBoosts(bytes[],uint128[])":{"notice":"Queues a drop boost of the validators removing an amount of BGT for sender."},"queueNewCuttingBoard(bytes,uint64,(address,uint96)[])":{"notice":"Queues a new cutting board on BeraChef for reward weight distribution for validator"},"recoverERC20(address,address,uint256)":{"notice":"Recovers ERC20 tokens sent accidentally to the contract"},"recoverERC20FromVault(address,address,address,uint256)":{"notice":"Recover ERC20 tokens from a vault."},"red()":{"notice":"The RED token"},"registerVault(address)":{"notice":"Registers a new vault for a given asset"},"removeValidators(bytes[])":{"notice":"Removes validators from the set of `InfraredValidators`."},"replaceValidator(bytes,bytes)":{"notice":"Replaces a validator in the set of `InfraredValidators`."},"rewardsDuration()":{"notice":"The rewards duration"},"rewardsFactory()":{"notice":"The Berachain rewards vault factory address"},"setIBGT(address)":{"notice":"Sets the address of the iBGT contract"},"setRed(address)":{"notice":"Sets the address of the RED contract"},"toggleVault(address)":{"notice":"Pauses staking functionality on a specific vault"},"updateFee(uint8,uint256)":{"notice":"Updates the fee rate charged on different harvest functionsPlease harvest all assosiated rewards for a given type before updating"},"updateInfraredBERABribesWeight(uint256)":{"notice":"Updates the weight for iBERA bribes"},"updateRedMintRate(uint256)":{"notice":"Updates the mint rate for RED"},"updateRewardsDuration(uint256)":{"notice":"Sets the new duration for reward distributions in InfraredVaults"},"updateRewardsDurationForVault(address,address,uint256)":{"notice":"Updates the rewards duration for a specific reward token on a specific vault"},"updateWhiteListedRewardTokens(address,bool)":{"notice":"Updates the whitelist status of a reward token"},"vaultRegistry(address)":{"notice":"Returns the infrared vault address for a given staking token"},"voter()":{"notice":"IRED voter"},"wbera()":{"notice":"Wrapped bera"},"whitelistedRewardTokens(address)":{"notice":"Checks if a token is a whitelisted reward token"}},"version":1}},"settings":{"remappings":["@berachain/=lib/contracts-monorepo/src/","@forge-std/=lib/forge-std/src/","@mock/=lib/contracts-monorepo/test/mock/","@openzeppelin-gov-ext/=lib/contracts-monorepo/node_modules/@openzeppelin/contracts-upgradeable/governance/extensions/","@openzeppelin-gov/=lib/contracts-monorepo/node_modules/@openzeppelin/contracts-upgradeable/governance/","@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb/=lib/prb-test/src/","@prb/math/=lib/contracts-monorepo/node_modules/@prb/math/","@pythnetwork/=lib/contracts-monorepo/node_modules/@pythnetwork/pyth-sdk-solidity/","@solmate/=lib/solmate/src/","contracts-monorepo/=lib/contracts-monorepo/src/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","prb-math/=lib/prb-math/src/","prb-test/=lib/prb-test/src/","solady/src/=lib/solady/src/","solady/test/=lib/solady/test/","solmate/=lib/solmate/src/","transient-goodies/=lib/contracts-monorepo/lib/transient-goodies/src/"],"optimizer":{"enabled":true,"runs":1},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IInfrared.sol":"IInfrared"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/contracts-monorepo/src/base/IStakingRewards.sol":{"keccak256":"0xbc9c5e63529aa547da9056deea1eb3d3275be79cb03ec141eb1488045b9f06dc","urls":["bzz-raw://8d0196a4ecda33cdeab2145e7f7ab832dae8c2e882b300edb2b75ce5c99d02d6","dweb:/ipfs/Qmeuu7U3qWV6WqjACrjso5hgYaVtKyDwc867rgZm56Agbo"],"license":"BUSL-1.1"},"lib/contracts-monorepo/src/base/IStakingRewardsErrors.sol":{"keccak256":"0xb6f2b90f37ef86721c2fffcc7ab9ef3cbe7857a9cae03aeab4a902e3d192b5a3","urls":["bzz-raw://71f9c77e85e6d5c8447663edd4078cecde127679c49befd0b4f8d8b675f3ea0b","dweb:/ipfs/QmY9g48MGDfFYLtdA8NgEC8dHvnLZGb33wbuQL8pXXqZxp"],"license":"BUSL-1.1"},"lib/contracts-monorepo/src/pol/interfaces/IBeraChef.sol":{"keccak256":"0x4c7aad6011b6d8281dddcb39a60dcd6e746494204cb1058c6244981fe7c7c320","urls":["bzz-raw://247d94f47542636be74396c6087e37a2721758e5f63a6f116cb77686f3c908bf","dweb:/ipfs/QmZsDhd9hc6zqwwjZmdwrJq8HbBTFVrAey5cjsyNvPuPQY"],"license":"BUSL-1.1"},"lib/contracts-monorepo/src/pol/interfaces/IPOLErrors.sol":{"keccak256":"0x0c1f5649b97aab159d3a9bf63295ce36803b2f3b4febe2fbe12edcbc524e2e43","urls":["bzz-raw://24756391ec06a77aa0645b929c80e0e9f98d185ab0fabdc4964ad7117371a08a","dweb:/ipfs/QmVwvweGzmrQKYuVHZwC13mrfZwaEQFr6nCh5J5J2fM3bv"],"license":"BUSL-1.1"},"lib/contracts-monorepo/src/pol/interfaces/IRewardVault.sol":{"keccak256":"0x715034f3ce499510dd02d31ae8a9363d9e29cad564bd60a7c227498af9c5ee69","urls":["bzz-raw://99ace33a1d80ad6ed6253190a630f9dd6e194e0e811e54f024ac3b760ce6a658","dweb:/ipfs/QmQxRtJzPrazFdBCeruxqbfiQhi3QhAmm3kTEnoHZA4pv1"],"license":"BUSL-1.1"},"lib/contracts-monorepo/src/pol/interfaces/IRewardVaultFactory.sol":{"keccak256":"0xa597489d77b8b02dbe22ac2539458d6b8129318cb501fda2dea54f9a94dbd16c","urls":["bzz-raw://be9558a38ce9a59c6872cb97b86ff5f0227a9466ed12f266df0e7151b0d44348","dweb:/ipfs/QmbxW6Zc1zQDtJa1BNYwGRnLT8QiUy7xuaz92so4udw7Ej"],"license":"BUSL-1.1"},"lib/openzeppelin-contracts/contracts/access/AccessControl.sol":{"keccak256":"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308","urls":["bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80","dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol":{"keccak256":"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41","urls":["bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26","dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/access/extensions/AccessControlEnumerable.sol":{"keccak256":"0xb1c906fcd870fc8dfedb63bfb1bc58b4d2a7469bc13cc44d996fda430693850a","urls":["bzz-raw://bd98c7779af61b220166cf952a05f6aca82ec859744d407d29043f8100adfb9c","dweb:/ipfs/Qmd6ftRk6cJgdooybM6F1X26R4SSUeNksv6Gni2NwEnKDw"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlEnumerable.sol":{"keccak256":"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306","urls":["bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3","dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7","urls":["bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f","dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"keccak256":"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80","urls":["bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229","dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70","urls":["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c","dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"keccak256":"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073","urls":["bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26","dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"keccak256":"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67","urls":["bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99","dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2","urls":["bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850","dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Pausable.sol":{"keccak256":"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd","urls":["bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc","dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":{"keccak256":"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133","urls":["bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8","dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b","urls":["bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df","dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol":{"keccak256":"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa","urls":["bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1","dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"],"license":"MIT"},"lib/solmate/src/tokens/ERC20.sol":{"keccak256":"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10","urls":["bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35","dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"],"license":"AGPL-3.0-only"},"src/core/InfraredBGT.sol":{"keccak256":"0x49d1db6bc4c39a09ae2349891af5c4a6cba16160cd80b60fa884fe4f2015bb49","urls":["bzz-raw://1340bb7f2faa97208c8d28b05d9172fbcea7d80f07b9d0f20a48f1b0fc1c53d5","dweb:/ipfs/Qmb15wpM3zTwUFFeifjBmgqX4PhpnREoRCwBUPHWnJUEbX"],"license":"MIT"},"src/core/libraries/ConfigTypes.sol":{"keccak256":"0x68754d1b88583bf2295e6d63ecb1738af8b68f48db872ef727732ceb1e95f6b7","urls":["bzz-raw://786af3f9fc02db012cdfeb1911412d5f9752ace6eafe3d7b14214521da6eb8b2","dweb:/ipfs/Qmbr9yz8iEEFVDvEktHnLc6iHqZxH1Wa5jCWYucVoeKuJ6"],"license":"MIT"},"src/core/libraries/ValidatorTypes.sol":{"keccak256":"0x5bd97036692d65ce076d4020f22d4040222da99c97c3d4bec2b308153cefccd0","urls":["bzz-raw://86e9934fee680c5245284108a3b6176f30089e4953983e2524899767c26684b2","dweb:/ipfs/QmazMMBwrg1G7VrAX1q1myFh6e2NhhmRcaFFcPPkicNMkR"],"license":"MIT"},"src/interfaces/IBribeCollector.sol":{"keccak256":"0x775219d3f5143f605a20f099c3b9b918d680fbe85a1aa45e11620a8ef4acfa37","urls":["bzz-raw://1b91538563a05849da64f68ff2f743fbea34aa466c4c5e81aeef11e4dd5e2b72","dweb:/ipfs/QmSDCUiJnqJggBKTmerQQK3mVKYTDEdY5FFpVqXx6TCPCu"],"license":"MIT"},"src/interfaces/IERC20Mintable.sol":{"keccak256":"0x3edbe078fdf111e9eac829bab8bcb270773d82589a06c9a8d18d78209012823a","urls":["bzz-raw://09e40d0db6f4224b1a4a6f1b4a10b82a1a6714e2af8e20cf743f4fe3f0ec4f20","dweb:/ipfs/QmX7N2F8AYkkCLCUkjnMegso38waS3kLAAhhxqM5KRMYKQ"],"license":"MIT"},"src/interfaces/IInfrared.sol":{"keccak256":"0xa858f2b5943bb4ac83c6b2e240d07fcf50500142913ad8b409b7461e423f7de6","urls":["bzz-raw://422a6eed36a8d6fb04bd8a441d5c67475b7e4eefbbad0c2a69234d9cede769f5","dweb:/ipfs/QmeKtZyxV45hMvyjjX54StWDuW6g3gXVjMpspq6c6khbKR"],"license":"MIT"},"src/interfaces/IInfraredBERA.sol":{"keccak256":"0xa8bc1b3e5422f421ee80f7cb71485136ec18775e49592d6f9c5d25f8c184e84f","urls":["bzz-raw://18ca64826f069af3d900176a8b3fa830da781710aea00509898eae543373bc2c","dweb:/ipfs/QmfDF5yY2DWpBosL8fcMBfVMmgNKWJnHUsSBYpGdgoiVa5"],"license":"MIT"},"src/interfaces/IInfraredDistributor.sol":{"keccak256":"0xf82b851723ca5ba24a514f147c5a6cfc9b3b27771a2d253a89f86b29ee531106","urls":["bzz-raw://5d8f8fa24a0456ed2905ef14519d9dbabcd6272107b3591ffacf8655de085eee","dweb:/ipfs/QmXCC9AKX9hkyhnbMC6mMfuq3fX2QF2TK3opXaw7AhrfpQ"],"license":"MIT"},"src/interfaces/IInfraredVault.sol":{"keccak256":"0x2534b9957d782bec24f481872fef2f0476253c9cfd2bcb1757175ef2e5841541","urls":["bzz-raw://2743ce987d37cdbd598471ed394bf6c71e2d2c78b106eb19531d2307da7d8c9c","dweb:/ipfs/QmX91MJMpRSm4aKb6uXM3uNU3h6LiEQ8EG64YVDrtk4zvH"],"license":"MIT"},"src/interfaces/IMultiRewards.sol":{"keccak256":"0x858dd5133276e6fe9911d25604666814c68d9ca1438d9afb75ea449daa2346f6","urls":["bzz-raw://0d59995c58de7d32a036cd4e7adcb8cd0425136d3a52d19fa6b67f156e74c625","dweb:/ipfs/QmZZQq2K2BCmvaCKUZaREtfz3GDKBoxRmTeeicdDtiHJ5E"],"license":"MIT"},"src/interfaces/IRED.sol":{"keccak256":"0xa80641227053167340a8e396fb7c32bd262e42954e1325c5f394d83ea6ea7b65","urls":["bzz-raw://5beea0c8d542b545b61cf39903c7101f336280f870884cf63fd60dbfa8e78de3","dweb:/ipfs/QmQZdbug4TrnbcqRy1NrxNTUVJs9MamSpwrumRELKjDgVd"],"license":"MIT"},"src/interfaces/IWBERA.sol":{"keccak256":"0x536355622f1af21408b6375d455cba352cad371d26a59c43bf01d1c1608afbb8","urls":["bzz-raw://2d9a5a01e9a24e9f3f30bd29daf0689978175e1b47b4d3989b657cb5b882d4f4","dweb:/ipfs/QmRNzKBtA4ng4YSYj3zJtU7qScVeuiiHSx8E67vkFZULCu"],"license":"MIT"},"src/utils/DataTypes.sol":{"keccak256":"0x7c7a315cc178b463e5d34721b149ea2484ab1d164afab367f2128dd9a91406ff","urls":["bzz-raw://290d49a7bd283a66196cc53cd732d7407a7454e9e14ebe1caa7b2d1c6cac8d19","dweb:/ipfs/QmU4SMTAfPxVaM2WM4cWthmTiaYSfpzbH19KJa7xLxRGY3"],"license":"MIT"},"src/vendors/ERC20PresetMinterPauser.sol":{"keccak256":"0x045bb45cd32c44fdc32d11dcf7c5bae128d94d45de9f923cfeb7adfb90954a82","urls":["bzz-raw://8f59d85eef1006509ed864c672060776f47b27fcc91f28a1204e29612006131f","dweb:/ipfs/QmSvCJ7VQHqBTLGaTi6JxmG33eFqG4AsDoisXQMmeeA8ft"],"license":"MIT"},"src/voting/interfaces/IVoter.sol":{"keccak256":"0x4cf4d3c2b8d614bf048ddaec3c98de5e549a929b2a8817168acc522efdb0d167","urls":["bzz-raw://165e8e01c986ac2990f774b324b1da60d97cdc07cc3f6e1e2b3bd33b35709d54","dweb:/ipfs/QmbJDoBdQjQvwc5gnDwckQBEv5Tc5LcDaumjDJvey33x7f"],"license":"MIT"}},"version":1},"id":91}